[
  {
    "full_database_snapshot": {
      "schemas": [
        {
          "schema_name": "realtime",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "extensions",
          "owner": "postgres"
        },
        {
          "schema_name": "vault",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "graphql_public",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "graphql",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "auth",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "storage",
          "owner": "supabase_admin"
        },
        {
          "schema_name": "public",
          "owner": "pg_database_owner"
        }
      ],
      "tables": [
        {
          "schema_name": "public",
          "table_name": "user_roles_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "user_roles_user_id_role_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers_resource_id_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "user_roles",
          "table_description": null,
          "table_size": "40 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains_sso_provider_id_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains_domain_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "extensions",
          "table_name": "pg_stat_statements_info",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "extensions",
          "table_name": "pg_stat_statements",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "graphql",
          "table_name": "seq_schema_version",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "S",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "amr_id_pk",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "user_id_created_at_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "factor_id_created_at_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sessions_user_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_session_id_revoked_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "profiles_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "profiles_email_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains",
          "table_description": "Auth: Manages SSO email address domain mapping to an SSO Identity Provider.",
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers_entity_id_key",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers_sso_provider_id_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers",
          "table_description": "Auth: Manages SAML Identity Provider connections.",
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers",
          "table_description": "Auth: Manages SSO identity provider information; see saml_providers for SAML.",
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "schedules_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_instance_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_instance_id_user_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "schedules",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "instances",
          "table_description": "Auth: Manages users across multiple sites.",
          "table_size": "16 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_token_unique",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "applications_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "audit_log_entries_pkey",
          "table_description": null,
          "table_size": "40 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "audit_logs_instance_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "instances_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "announcements_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "schema_migrations_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sessions_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_instance_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_id_seq",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "S",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "confirmation_token_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_parent_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "recovery_token_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_instance_id_email_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "email_change_token_new_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "reauthentication_token_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "email_change_token_current_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "schema_migrations",
          "table_description": "Auth: Manages updates to the auth system.",
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "announcements",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "buckets_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "bname",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "buckets",
          "table_description": null,
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "table_description": "auth: stores metadata about factors",
          "table_size": "56 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "table_description": null,
          "table_size": "64 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "migrations_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "migrations_name_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors_user_friendly_name_unique",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_challenges_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "table_description": "Auth: Store of tokens used to refresh JWT tokens once they expire.",
          "table_size": "160 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "objects_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "bucketid_objname",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "name_prefix_search",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "vault",
          "table_name": "secrets_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "vault",
          "table_name": "secrets_name_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_amr_claims_session_id_authentication_method_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "vault",
          "table_name": "secrets",
          "table_description": "Table with encrypted `secret` column for storing sensitive information on disk.",
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "vault",
          "table_name": "decrypted_secrets",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states_sso_provider_id_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states_for_email_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens_relates_to_hash_idx",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_email_partial_key",
          "table_description": "Auth: A partial unique index that applies only when is_sso_user is false",
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors_user_id_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_phone_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "idx_auth_code",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "identities_provider_id_provider_unique",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "idx_user_id_auth_method",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens_updated_at_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state_created_at_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states_created_at_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sessions_not_after_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_challenge_created_at_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "identities_user_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "identities_email_idx",
          "table_description": "Auth: Ensures indexed queries on the email column",
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "identities_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users_is_anonymous_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens_token_hash_hash_idx",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens_user_id_token_type_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "table_description": "Auth: Stores user login data within a secure schema.",
          "table_size": "168 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "audit_log_entries",
          "table_description": "Auth: Audit trail for user actions.",
          "table_size": "192 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states",
          "table_description": "Auth: Contains SAML Relay State information for each Service Provider initiated login.",
          "table_size": "40 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_amr_claims",
          "table_description": "auth: stores authenticator method reference claims for multi factor authentication",
          "table_size": "80 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state",
          "table_description": "stores metadata for pkce logins",
          "table_size": "40 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "identities",
          "table_description": "Auth: Stores identities associated to a user.",
          "table_size": "80 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens",
          "table_description": null,
          "table_size": "112 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "paystubs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "paystubs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors_last_challenged_at_key",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "unique_phone_factor_per_user",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_challenges",
          "table_description": "auth: stores metadata about challenge requests made",
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers_resource_id_pattern_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_clients_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_clients_deleted_at_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_clients",
          "table_description": null,
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "table_description": "Auth: Stores session data associated to a user.",
          "table_size": "128 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "trainings_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "migrations",
          "table_description": null,
          "table_size": "40 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "applications",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "idx_objects_bucket_id_name",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "idx_multipart_uploads_list",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads_parts_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "buckets_analytics_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker_employee_id_training_id_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "table_description": null,
          "table_size": "48 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "buckets_analytics",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "table_description": null,
          "table_size": "200 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads",
          "table_description": null,
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "schema_migrations_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "user_defined_filter",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "c",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes",
          "table_description": null,
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "idx_name_bucket_level_unique",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "objects_bucket_id_level_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "idx_objects_lower_name",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "storage",
          "table_name": "idx_prefixes_lower_name",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_edit_log_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "wal_column",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "c",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "wal_rls",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "c",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "pk_subscription",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "schema_migrations",
          "table_description": null,
          "table_size": "24 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription_id_seq",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "S",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_summary",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_summary",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_edit_log",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "debug_log_id_seq",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "S",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription_subscription_id_entity_filters_key",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "debug_log",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "debug_log_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents_user_client_unique",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "table_description": null,
          "table_size": "48 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations_pkey",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents_active_user_client_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents_user_order_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents_active_client_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "sessions_oauth_client_id_idx",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations_authorization_id_key",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations_authorization_code_key",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations",
          "table_description": null,
          "table_size": "40 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_auth_pending_exp_idx",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "messages",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "p",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "messages_pkey",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "I",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "ix_realtime_subscription_entity",
          "table_description": null,
          "table_size": "8192 bytes",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_completion_log_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "realtime",
          "table_name": "messages_inserted_at_topic_index",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "I",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_completion_log",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "one_open_shift_per_employee",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes_training_id_version_key",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "ux_training_quizzes_one_active",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "table_description": null,
          "table_size": "48 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "table_description": null,
          "table_size": "136 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs_view",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payrolls_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payrolls",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payroll_items_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payroll_items",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payroll_invoices_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreement_summary",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "payroll_invoices",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "v_invoice_data",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreements",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "table_description": null,
          "table_size": "104 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreements_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "training_summary_secure",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "door_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker_unique",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "v_cctv_cameras",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs_pkey",
          "table_description": null,
          "table_size": "16 kB",
          "kind": "i",
          "row_security_enabled": false,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "table_description": null,
          "table_size": "32 kB",
          "kind": "r",
          "row_security_enabled": true,
          "row_security_forced": false
        },
        {
          "schema_name": "public",
          "table_name": "v_cctv_logs",
          "table_description": null,
          "table_size": "0 bytes",
          "kind": "v",
          "row_security_enabled": false,
          "row_security_forced": false
        }
      ],
      "columns": [
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "verified_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "user_roles",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "user_roles",
          "column_name": "role",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "user_roles",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements_info",
          "column_name": "dealloc",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements_info",
          "column_name": "stats_reset",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "userid",
          "data_type": "oid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "dbid",
          "data_type": "oid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "toplevel",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "queryid",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets_analytics",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "size",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": "0",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "part_number",
          "data_type": "integer",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "training_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "completed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "quiz_score",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "quiz_version",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "docu_signed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "quiz_answers",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "in_progress_size",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": "0",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "user_metadata",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "prefixes",
          "column_name": "level",
          "data_type": "integer",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "prefixes",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "prefixes",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "schema_migrations",
          "column_name": "version",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "schema_migrations",
          "column_name": "inserted_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "training_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "completed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "quiz_score",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_summary",
          "column_name": "shift_day",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_summary",
          "column_name": "total_hours",
          "data_type": "interval",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "id",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "subscription_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "entity",
          "data_type": "regclass",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "filters",
          "data_type": "ARRAY",
          "is_nullable": "NO",
          "column_default": "'{}'::realtime.user_defined_filter[]",
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "claims",
          "data_type": "jsonb",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "claims_role",
          "data_type": "regrole",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "subscription",
          "column_name": "created_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "NO",
          "column_default": "timezone('utc'::text, now())",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "shift_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "edited_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "edited_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "debug_log",
          "column_name": "id",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": "nextval('debug_log_id_seq'::regclass)",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "debug_log",
          "column_name": "logged_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "client_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "granted_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "revoked_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "client_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "code_challenge_method",
          "data_type": "USER-DEFINED",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "response_type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": "'code'::auth.oauth_response_type",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "status",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": "'pending'::auth.oauth_authorization_status",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "expires_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "(now() + '00:03:00'::interval)",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "approved_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "payload",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "private",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "updated_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "inserted_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "training_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "completed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "training_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "version",
          "data_type": "integer",
          "is_nullable": "NO",
          "column_default": "1",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "content",
          "data_type": "jsonb",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "is_active",
          "data_type": "boolean",
          "is_nullable": "NO",
          "column_default": "true",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "shift_start",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "shift_end",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "duration",
          "data_type": "interval",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "created_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "date_started",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "date_ended",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "release_date",
          "data_type": "date",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "payroll_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "hrs_worked",
          "data_type": "numeric",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "rate",
          "data_type": "numeric",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "subtotal",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "total",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "agreement_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "signed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "payroll_item_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "submitted_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "confirmed",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "declined",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "verified_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "user_roles",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "admin_verified",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "released",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "invoice_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "payroll_item_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "payroll_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "date_started",
          "data_type": "date",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "date_ended",
          "data_type": "date",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "release_date",
          "data_type": "date",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "hrs_worked",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "rate",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "subtotal",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "total",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "confirmed",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "declined",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "submitted_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "verified_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "admin_verified",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "released",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "agreement_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "signed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "training_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "completed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "quiz_score",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "battery_percentage",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": "100",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "last_updated",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "updated_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "battery_percentage",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "updated_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "number_of_items",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "verifier_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "camera_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "battery_percentage",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "updated_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": "CURRENT_DATE",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "time",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIME",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "contacted_management",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "police_contacted",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "inputted_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "management_contacted",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "camera_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "battery_percentage",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "updated_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "plans",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "total_plan_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "min_plan_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "max_plan_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "mean_plan_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "stddev_plan_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "calls",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "total_exec_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "min_exec_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "max_exec_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "mean_exec_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "stddev_exec_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "rows",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blks_hit",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blks_read",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blks_dirtied",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blks_written",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blks_hit",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blks_read",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blks_dirtied",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blks_written",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "temp_blks_read",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "temp_blks_written",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blk_read_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "shared_blk_write_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blk_read_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "local_blk_write_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "temp_blk_read_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "temp_blk_write_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "wal_records",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "wal_fpi",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "wal_bytes",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_functions",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_generation_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_inlining_count",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_inlining_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_optimization_count",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_optimization_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_emission_count",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_emission_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_deform_count",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "jit_deform_time",
          "data_type": "double precision",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "stats_since",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "minmax_stats_since",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_domains",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_domains",
          "column_name": "sso_provider_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_domains",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_domains",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "sso_provider_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "attribute_mapping",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_providers",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_providers",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_providers",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_providers",
          "column_name": "disabled",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "time_in",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "time_out",
          "data_type": "time without time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "instances",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "instances",
          "column_name": "uuid",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "instances",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "instances",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "created_by",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "owner",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "public",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "avif_autodetection",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "file_size_limit",
          "data_type": "bigint",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": "'STANDARD'::storage.buckettype",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "factor_type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "status",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "last_challenged_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "web_authn_credential",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "web_authn_aaguid",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "owner",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "last_accessed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "metadata",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "user_metadata",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "level",
          "data_type": "integer",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "instance_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "id",
          "data_type": "bigint",
          "is_nullable": "NO",
          "column_default": "nextval('auth.refresh_tokens_id_seq'::regclass)",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "revoked",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "session_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "start_date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "end_date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "key_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "nonce",
          "data_type": "bytea",
          "is_nullable": "YES",
          "column_default": "vault._crypto_aead_det_noncegen()",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIMESTAMP",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "CURRENT_TIMESTAMP",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "key_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "nonce",
          "data_type": "bytea",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "start_date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "end_date",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "instance_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_confirmed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "invited_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "confirmation_sent_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "recovery_sent_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_change_sent_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "last_sign_in_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "raw_app_meta_data",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "raw_user_meta_data",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "is_super_admin",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "phone_confirmed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "phone_change_sent_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "confirmed_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_change_confirm_status",
          "data_type": "smallint",
          "is_nullable": "YES",
          "column_default": "0",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "banned_until",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "reauthentication_sent_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "is_sso_user",
          "data_type": "boolean",
          "is_nullable": "NO",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "deleted_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "is_anonymous",
          "data_type": "boolean",
          "is_nullable": "NO",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "audit_log_entries",
          "column_name": "instance_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "audit_log_entries",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "audit_log_entries",
          "column_name": "payload",
          "data_type": "json",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "audit_log_entries",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "sso_provider_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "flow_state_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_amr_claims",
          "column_name": "session_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_amr_claims",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_amr_claims",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_amr_claims",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "code_challenge_method",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "auth_code_issued_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "identity_data",
          "data_type": "jsonb",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "last_sign_in_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "token_type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "created_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "updated_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "pay_period_start",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "pay_period_end",
          "data_type": "date",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "amount",
          "data_type": "numeric",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "factor_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "verified_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "ip_address",
          "data_type": "inet",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "web_authn_session_data",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "media",
          "data_type": "jsonb",
          "is_nullable": "YES",
          "column_default": "'[]'::jsonb",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "requires_signature",
          "data_type": "boolean",
          "is_nullable": "YES",
          "column_default": "false",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "registration_type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "deleted_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "client_type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": "'confidential'::auth.oauth_client_type",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "user_id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "factor_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "aal",
          "data_type": "USER-DEFINED",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "not_after",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "refreshed_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "ip",
          "data_type": "inet",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "oauth_client_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "migrations",
          "column_name": "id",
          "data_type": "integer",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "migrations",
          "column_name": "executed_at",
          "data_type": "timestamp without time zone",
          "is_nullable": "YES",
          "column_default": "CURRENT_TIMESTAMP",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "preferred_interview_date",
          "data_type": "date",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "id",
          "data_type": "uuid",
          "is_nullable": "NO",
          "column_default": "gen_random_uuid()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "employee_id",
          "data_type": "uuid",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "shift_start",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "shift_end",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "duration",
          "data_type": "interval",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "updated_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "YES",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets_analytics",
          "column_name": "type",
          "data_type": "USER-DEFINED",
          "is_nullable": "NO",
          "column_default": "'ANALYTICS'::storage.buckettype",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets_analytics",
          "column_name": "created_at",
          "data_type": "timestamp with time zone",
          "is_nullable": "NO",
          "column_default": "now()",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "employee_type",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "employee_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "agreement_title",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "auth_code",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "allowed_types",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "code_challenge",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "provider_type",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "provider_access_token",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "provider_refresh_token",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "doc_links",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "action",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "flow_state",
          "column_name": "authentication_method",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "provider_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "battery_type",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "provider",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "signature_base64",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "debug_log",
          "column_name": "message",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "training_title",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "identities",
          "column_name": "email",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_consents",
          "column_name": "scopes",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "certificate_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "token_hash",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "one_time_tokens",
          "column_name": "relates_to",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "video_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary_secure",
          "column_name": "quiz_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "authorization_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "remarks",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'Active'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "redirect_uri",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "scope",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "file_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "state",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "resource",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "code_challenge",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_challenges",
          "column_name": "otp_code",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_authorizations",
          "column_name": "authorization_code",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "door_location",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "title",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "video_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_domains",
          "column_name": "domain",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "quiz_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "invoice_no",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "trainings",
          "column_name": "allowed_types",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": "'{VA,Store}'::text[]",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "entity_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "metadata_xml",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "metadata_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "topic",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "extension",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "client_secret_hash",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_providers",
          "column_name": "name_id_format",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "note",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sso_providers",
          "column_name": "resource_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "redirect_uris",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "grant_types",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "client_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "client_uri",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "oauth_clients",
          "column_name": "logo_uri",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "realtime",
          "table_name": "messages",
          "column_name": "event",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "full_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "nickname",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "acronym",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "position",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "email",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "instances",
          "column_name": "raw_base_config",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "wise_tag",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "wise_email",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "schema_migrations",
          "column_name": "version",
          "data_type": "character varying",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "message",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "title",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "content",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "bank_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "full_name",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "user_agent",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "name",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "email",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "sessions",
          "column_name": "tag",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "contact_number",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "address",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "migrations",
          "column_name": "name",
          "data_type": "character varying",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": 100
        },
        {
          "table_schema": "storage",
          "table_name": "migrations",
          "column_name": "hash",
          "data_type": "character varying",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": 40
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "allowed_mime_types",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets",
          "column_name": "owner_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "emergency_contact",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "account_number",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "full_name",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "friendly_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "email",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "contact_number",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "message",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "secret",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_factors",
          "column_name": "phone",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "preferred_interview_time",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "resume_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "applications",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'pending'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "employee_type",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'VA'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "bucket_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "role",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'employee'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "position",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "acronym",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "nickname",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "wise_tag",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "path_tokens",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "version",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "objects",
          "column_name": "owner_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "wise_email",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "bank_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "profiles",
          "column_name": "account_number",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "token",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "user_id",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "storage",
          "table_name": "buckets_analytics",
          "column_name": "id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "camera_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "buckets_analytics",
          "column_name": "format",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": "'ICEBERG'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "refresh_tokens",
          "column_name": "parent",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "battery_type",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "battery_type",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "upload_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "reason",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'pending'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "bucket_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "camera_name",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "column_name": "employee_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "mfa_amr_claims",
          "column_name": "authentication_method",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "column_name": "query",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": "''::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "secrets",
          "column_name": "secret",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "etag",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "owner_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "version",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "payroll_status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "note",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "secret",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "note",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "full_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "updated_by_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "column_name": "updated_by_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "certificate_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "column_name": "remarks",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "reason",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'pending'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "reason",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "signature_data",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "aud",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "role",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "encrypted_password",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "title",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "upload_signature",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "confirmation_token",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "bucket_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "recovery_token",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_change_token_new",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_change",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": 255
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "version",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "owner_id",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "doc_links",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": "'{}'::text[]",
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "prefixes",
          "column_name": "bucket_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'open'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "phone",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "NULL::character varying",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreements",
          "column_name": "allowed_types",
          "data_type": "ARRAY",
          "is_nullable": "YES",
          "column_default": "'{VA,Store}'::text[]",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "phone_change",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "''::character varying",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "phone_change_token",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": "''::character varying",
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "camera_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "description",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "email_change_token_current",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": "''::character varying",
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "users",
          "column_name": "reauthentication_token",
          "data_type": "character varying",
          "is_nullable": "YES",
          "column_default": "''::character varying",
          "character_maximum_length": 255
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "employee_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "column_name": "camera_status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "training_title",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "reason_for_entry",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "signature_base64",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "certificate_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "video_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "column_name": "quiz_url",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "audit_log_entries",
          "column_name": "ip_address",
          "data_type": "character varying",
          "is_nullable": "NO",
          "column_default": "''::character varying",
          "character_maximum_length": 64
        },
        {
          "table_schema": "public",
          "table_name": "shift_summary",
          "column_name": "full_name",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'pending'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "request_id",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "for_email",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "auth",
          "table_name": "saml_relay_states",
          "column_name": "redirect_to",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "status",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": "'pending'::text",
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "notes",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "footage_link",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "id_verified",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "column_name": "key",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "prefixes",
          "column_name": "name",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "storage",
          "table_name": "s3_multipart_uploads",
          "column_name": "key",
          "data_type": "text",
          "is_nullable": "NO",
          "column_default": null,
          "character_maximum_length": null
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "column_name": "decrypted_secret",
          "data_type": "text",
          "is_nullable": "YES",
          "column_default": null,
          "character_maximum_length": null
        }
      ],
      "relationships": [
        {
          "table_schema": "public",
          "table_name": "schedules",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "payroll_item_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "payroll_items",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payroll_invoices",
          "column_name": "verified_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "announcements",
          "column_name": "created_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "time_off_requests",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "vacation_requests",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "paystubs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "training_tracker",
          "column_name": "training_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "trainings",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "training_completion_log",
          "column_name": "training_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "trainings",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "shift_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "shift_logs",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "shift_edit_log",
          "column_name": "edited_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "training_quizzes",
          "column_name": "training_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "trainings",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payrolls",
          "column_name": "created_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "payroll_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "payrolls",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "payroll_items",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "agreement_tracker",
          "column_name": "agreement_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "agreements",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "door_logs",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "clock_logs",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "cash_removal_logs",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "safe_room_logs",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "verifier_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "sold_out_logs",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "incident_reports",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "employee_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "employee_violations",
          "column_name": "inputted_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "cctv_cameras",
          "column_name": "updated_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "camera_id",
          "foreign_table_schema": "public",
          "foreign_table_name": "cctv_cameras",
          "foreign_column_name": "id"
        },
        {
          "table_schema": "public",
          "table_name": "cctv_logs",
          "column_name": "updated_by",
          "foreign_table_schema": "public",
          "foreign_table_name": "profiles",
          "foreign_column_name": "id"
        }
      ],
      "rls": [
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "policy_name": "Admins can manage all time-off requests",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests",
          "policy_name": "Employees can view their vacation requests",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests",
          "policy_name": "Admins can manage all vacation requests",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "paystubs",
          "policy_name": "Employees can view their own paystubs",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "paystubs",
          "policy_name": "Admins can manage all paystubs",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "policy_name": "Everyone can view trainings",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "true",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "policy_name": "Admins can manage trainings",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "user_roles",
          "policy_name": "Admins can manage roles",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Employees can view their own training progress",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Employees can insert their own training completion",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() = employee_id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "policy_name": "Users can update their own profile",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = id)",
          "check_expression_raw": "(auth.uid() = id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "policy_name": "Admins can manage all profiles",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "schedules",
          "policy_name": "Employees can view their own schedules",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "schedules",
          "policy_name": "Admins can manage all schedules",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "applications",
          "policy_name": "Anyone can insert applications",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "true",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "applications",
          "policy_name": "Admins can view and manage all applications",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "announcements",
          "policy_name": "Everyone can view announcements",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "true",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "announcements",
          "policy_name": "Admins can manage announcements",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "policy_name": "Employees can view their own requests",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "policy_name": "Employees can create their own requests",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() = employee_id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Admins can manage all training tracker data",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_completion_log",
          "policy_name": "Admins can view all training completion logs",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_completion_log",
          "policy_name": "Employees can view their own completion logs",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "policy_name": "Employees can view their own shifts",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "policy_name": "Employees can insert or update their own shifts",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() = employee_id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "policy_name": "Employees can update their own shifts",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": "(auth.uid() = employee_id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "policy_name": "Admins can manage all shifts",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_edit_log",
          "policy_name": "Admins can view all shift edit logs",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "policy_name": "Allow inserts from auth trigger",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "true",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "policy_name": "Employees can view only their own shift logs",
          "command": "SELECT",
          "roles": [
            "authenticated"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "policy_name": "Employees select active quizzes",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(is_active = true)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "policy_name": "safe_room_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "policy_name": "Admins manage training_quizzes",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Employees select own training_tracker",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(employee_id = auth.uid())",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Employees insert own training_tracker",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(employee_id = auth.uid())",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Employees update own training_tracker",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(employee_id = auth.uid())",
          "check_expression_raw": "(employee_id = auth.uid())",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "policy_name": "Admins manage training_tracker",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "policy_name": "Users can view and update their own profile",
          "command": "SELECT",
          "roles": [
            "authenticated"
          ],
          "using_expression_raw": "(auth.uid() = id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "policy_name": "Employees can view trainings",
          "command": "SELECT",
          "roles": [
            "authenticated"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "policy_name": "Admins can manage all trainings",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreements",
          "policy_name": "Employees can view allowed agreements",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "((EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.employee_type = ANY (agreements.allowed_types))))) OR has_role(auth.uid(), 'admin'::app_role))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreements",
          "policy_name": "Admins can manage all agreements",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "Employees can view tracker",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(employee_id = auth.uid())",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "Employees can insert tracker",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(employee_id = auth.uid())",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "Employees can update tracker",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(employee_id = auth.uid())",
          "check_expression_raw": "(employee_id = auth.uid())",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "Admins can manage all trackers",
          "command": "ALL",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_summary_secure",
          "policy_name": "Admins can view all training_summary_secure",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "has_role(auth.uid(), 'admin'::app_role)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "training_summary_secure",
          "policy_name": "Employees can view their own training_summary_secure",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "employees can upsert their own signatures",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() = employee_id)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "policy_name": "employees can update their own signatures",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() = employee_id)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "policy_name": "door_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "policy_name": "door_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "policy_name": "door_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "policy_name": "clock_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "policy_name": "clock_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "policy_name": "clock_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "policy_name": "cash_removal_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "policy_name": "cash_removal_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "policy_name": "cash_removal_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "policy_name": "safe_room_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "policy_name": "safe_room_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "policy_name": "sold_out_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "policy_name": "sold_out_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "policy_name": "sold_out_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "policy_name": "incident_reports_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "policy_name": "incident_reports_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "policy_name": "incident_reports_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "policy_name": "employee_violations_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "policy_name": "employee_violations_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "policy_name": "employee_violations_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "policy_name": "cctv_cameras_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "policy_name": "cctv_cameras_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "policy_name": "cctv_cameras_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "policy_name": "cctv_logs_select",
          "command": "SELECT",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "policy_name": "cctv_logs_insert",
          "command": "INSERT",
          "roles": [
            "public"
          ],
          "using_expression_raw": null,
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "policy_name": "cctv_logs_update",
          "command": "UPDATE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(auth.uid() IS NOT NULL)",
          "check_expression_raw": "(auth.uid() IS NOT NULL)",
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "policy_name": "door_logs_delete_admins",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "policy_name": "door_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "policy_name": "clock_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "policy_name": "cash_removal_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "policy_name": "safe_room_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "policy_name": "sold_out_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "policy_name": "incident_reports_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "policy_name": "employee_violations_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "policy_name": "cctv_cameras_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "policy_name": "cctv_logs_delete_admin_role",
          "command": "DELETE",
          "roles": [
            "public"
          ],
          "using_expression_raw": "(EXISTS ( SELECT 1\n   FROM profiles p\n  WHERE ((p.id = auth.uid()) AND (p.role = 'admin'::text))))",
          "check_expression_raw": null,
          "is_permissive": "PERMISSIVE"
        }
      ],
      "triggers": [
        {
          "schema_name": "storage",
          "table_name": "objects",
          "trigger_name": "update_objects_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION storage.update_updated_at_column()"
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes",
          "trigger_name": "prefixes_create_hierarchy",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION storage.prefixes_insert_trigger()"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "trigger_name": "objects_insert_create_prefix",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION storage.objects_insert_prefix_trigger()"
        },
        {
          "schema_name": "storage",
          "table_name": "buckets",
          "trigger_name": "enforce_bucket_name_length_trigger",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION storage.enforce_bucket_name_length()"
        },
        {
          "schema_name": "storage",
          "table_name": "buckets",
          "trigger_name": "enforce_bucket_name_length_trigger",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION storage.enforce_bucket_name_length()"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "trigger_name": "update_profiles_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "schedules",
          "trigger_name": "update_schedules_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "applications",
          "trigger_name": "update_applications_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "announcements",
          "trigger_name": "update_announcements_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "trigger_name": "update_time_off_requests_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests",
          "trigger_name": "update_vacation_requests_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "trigger_name": "objects_delete_delete_prefix",
          "action_timing": "AFTER",
          "event_manipulation": "DELETE",
          "action_statement": "EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "trigger_name": "objects_update_create_prefix",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION storage.objects_update_prefix_trigger()"
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes",
          "trigger_name": "prefixes_delete_hierarchy",
          "action_timing": "AFTER",
          "event_manipulation": "DELETE",
          "action_statement": "EXECUTE FUNCTION storage.delete_prefix_hierarchy_trigger()"
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "trigger_name": "tr_check_filters",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION realtime.subscription_check_filters()"
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "trigger_name": "tr_check_filters",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION realtime.subscription_check_filters()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "update_training_tracker_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "on_training_completion",
          "action_timing": "AFTER",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION log_training_completion()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "on_training_completion",
          "action_timing": "AFTER",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION log_training_completion()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "check_duplicate_shift",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION prevent_duplicate_shift()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "log_shift_changes",
          "action_timing": "AFTER",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION log_admin_shift_change()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "log_shift_changes",
          "action_timing": "AFTER",
          "event_manipulation": "DELETE",
          "action_statement": "EXECUTE FUNCTION log_admin_shift_change()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "log_shift_changes",
          "action_timing": "AFTER",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION log_admin_shift_change()"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "trigger_name": "on_auth_user_created",
          "action_timing": "AFTER",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION handle_new_user()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "update_shift_duration_trigger",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_shift_duration()"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "trigger_name": "prevent_multiple_open_shifts_trigger",
          "action_timing": "BEFORE",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION prevent_multiple_open_shifts()"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "trigger_name": "trg_training_quizzes_set_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION set_updated_at()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "trg_training_tracker_set_updated_at",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION set_updated_at()"
        },
        {
          "schema_name": "public",
          "table_name": "payroll_items",
          "trigger_name": "trg_auto_invoice",
          "action_timing": "AFTER",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION create_invoice_for_item()"
        },
        {
          "schema_name": "public",
          "table_name": "agreements",
          "trigger_name": "trg_update_agreements",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "trigger_name": "trg_update_agreement_tracker",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "trg_refresh_training_summary_secure",
          "action_timing": "AFTER",
          "event_manipulation": "INSERT",
          "action_statement": "EXECUTE FUNCTION refresh_training_summary_secure()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "trg_refresh_training_summary_secure",
          "action_timing": "AFTER",
          "event_manipulation": "DELETE",
          "action_statement": "EXECUTE FUNCTION refresh_training_summary_secure()"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "trigger_name": "trg_refresh_training_summary_secure",
          "action_timing": "AFTER",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION refresh_training_summary_secure()"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "trigger_name": "set_timestamp",
          "action_timing": "BEFORE",
          "event_manipulation": "UPDATE",
          "action_statement": "EXECUTE FUNCTION update_updated_at_column()"
        }
      ],
      "functions": [
        {
          "schema_name": "public",
          "function_name": "set_updated_at",
          "definition": "CREATE OR REPLACE FUNCTION public.set_updated_at()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\r\nbegin\r\n  new.updated_at := now();\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "gen_salt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.gen_salt(text)\n RETURNS text\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_gen_salt$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "encrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.encrypt(bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_encrypt$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.decrypt(bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_decrypt$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pg_stat_statements_info",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pg_stat_statements_info(OUT dealloc bigint, OUT stats_reset timestamp with time zone)\n RETURNS record\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pg_stat_statements', $function$pg_stat_statements_info$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "gen_salt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.gen_salt(text, integer)\n RETURNS text\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_gen_salt_rounds$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pg_stat_statements_reset",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pg_stat_statements_reset(userid oid DEFAULT 0, dbid oid DEFAULT 0, queryid bigint DEFAULT 0, minmax_only boolean DEFAULT false)\n RETURNS timestamp with time zone\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pg_stat_statements', $function$pg_stat_statements_reset_1_11$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "get_time_off_with_profiles",
          "definition": "CREATE OR REPLACE FUNCTION public.get_time_off_with_profiles()\n RETURNS TABLE(id uuid, employee_id uuid, start_date date, end_date date, reason text, status text, created_at timestamp with time zone, full_name text)\n LANGUAGE sql\n SECURITY DEFINER\nAS $function$\r\n  select\r\n    tor.id,\r\n    tor.employee_id,\r\n    tor.start_date,\r\n    tor.end_date,\r\n    tor.reason,\r\n    tor.status,\r\n    tor.created_at,\r\n    p.full_name\r\n  from public.time_off_requests tor\r\n  left join public.profiles p on p.id = tor.employee_id\r\n  order by tor.created_at desc;\r\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "upsert_training_completion",
          "definition": "CREATE OR REPLACE FUNCTION public.upsert_training_completion(_employee_id uuid, _training_id uuid, _quiz_score numeric, _certificate_url text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nbegin\r\n  -- ✅ Perform UPSERT only\r\n  insert into public.training_tracker (\r\n    employee_id,\r\n    training_id,\r\n    quiz_score,\r\n    certificate_url,\r\n    completed_at,\r\n    updated_at\r\n  )\r\n  values (_employee_id, _training_id, _quiz_score, _certificate_url, now(), now())\r\n  on conflict (employee_id, training_id) do update\r\n  set quiz_score      = excluded.quiz_score,\r\n      certificate_url = excluded.certificate_url,\r\n      completed_at    = now(),\r\n      updated_at      = now();\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "record_quiz_result",
          "definition": "CREATE OR REPLACE FUNCTION public.record_quiz_result(_employee_id uuid, _training_id uuid, _score numeric, _quiz_version integer)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nbegin\r\n  insert into public.training_tracker (employee_id, training_id, quiz_score, quiz_version, completed_at)\r\n  values (_employee_id, _training_id, _score, _quiz_version, now())\r\n  on conflict (employee_id, training_id)\r\n  do update\r\n    set quiz_score = excluded.quiz_score,\r\n        quiz_version = excluded.quiz_version,\r\n        completed_at = now(),\r\n        updated_at = now();\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "admin_upsert_employee",
          "definition": "CREATE OR REPLACE FUNCTION public.admin_upsert_employee(_admin_id uuid, _employee_id uuid, _full_name text, _email text, _contact text, _address text, _emergency text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nbegin\r\n  -- 1️⃣ Verify that the caller really is an admin\r\n  if not public.has_role(_admin_id, 'admin') then\r\n    raise exception 'Permission denied: only admins can create employees.';\r\n  end if;\r\n\r\n  -- 2️⃣ Upsert employee profile\r\n  insert into public.profiles (id, full_name, email, contact_number, address, emergency_contact)\r\n  values (_employee_id, _full_name, _email, _contact, _address, _emergency)\r\n  on conflict (id) do update\r\n  set full_name = excluded.full_name,\r\n      email = excluded.email,\r\n      contact_number = excluded.contact_number,\r\n      address = excluded.address,\r\n      emergency_contact = excluded.emergency_contact;\r\n\r\n  -- 3️⃣ Assign employee role if missing\r\n  insert into public.user_roles (user_id, role)\r\n  values (_employee_id, 'employee')\r\n  on conflict (user_id, role) do nothing;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_nil",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_nil()\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_nil$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_ns_dns",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_ns_dns()\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_ns_dns$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_ns_url",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_ns_url()\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_ns_url$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_ns_oid",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_ns_oid()\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_ns_oid$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "auth",
          "function_name": "uid",
          "definition": "CREATE OR REPLACE FUNCTION auth.uid()\n RETURNS uuid\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.sub', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')\n  )::uuid\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "auth",
          "function_name": "role",
          "definition": "CREATE OR REPLACE FUNCTION auth.role()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.role', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')\n  )::text\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "auth",
          "function_name": "email",
          "definition": "CREATE OR REPLACE FUNCTION auth.email()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.email', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')\n  )::text\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_ns_x500",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_ns_x500()\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_ns_x500$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_generate_v1",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_generate_v1()\n RETURNS uuid\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_generate_v1$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "has_role",
          "definition": "CREATE OR REPLACE FUNCTION public.has_role(_user_id uuid, _role app_role)\n RETURNS boolean\n LANGUAGE sql\n STABLE SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\n  SELECT EXISTS (\r\n    SELECT 1 FROM public.user_roles WHERE user_id = _user_id AND role = _role\r\n  );\r\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "update_updated_at_column",
          "definition": "CREATE OR REPLACE FUNCTION public.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\r\nBEGIN\r\n  NEW.updated_at = NOW();\r\n  RETURN NEW;\r\nEND;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "handle_new_user",
          "definition": "CREATE OR REPLACE FUNCTION public.handle_new_user()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\r\nbegin\r\n  insert into public.profiles (\r\n    id, full_name, email, employee_type, created_at, updated_at\r\n  )\r\n  values (\r\n    new.id,\r\n    coalesce(new.raw_user_meta_data->>'full_name', new.email),  -- fallback to email\r\n    new.email,\r\n    coalesce(new.raw_user_meta_data->>'employee_type', 'VA'),\r\n    now(), now()\r\n  );\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "prevent_duplicate_shift",
          "definition": "CREATE OR REPLACE FUNCTION public.prevent_duplicate_shift()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  existing_open_shift uuid;\r\n  current_user_id uuid;\r\n  is_admin boolean := false;\r\nbegin\r\n  -- Safely get current user ID (may be null in SQL Editor)\r\n  begin\r\n    select nullif(current_setting('request.jwt.claim.sub', true), '')::uuid into current_user_id;\r\n  exception when others then\r\n    current_user_id := null;\r\n  end;\r\n\r\n  -- Verify admin role, if possible\r\n  if current_user_id is not null then\r\n    select public.has_role(current_user_id, 'admin') into is_admin;\r\n  end if;\r\n\r\n  -- 🚫 Apply duplicate-shift check only for non-admins\r\n  if not is_admin then\r\n    select id into existing_open_shift\r\n    from public.shift_logs\r\n    where employee_id = new.employee_id\r\n      and shift_end is null\r\n    limit 1;\r\n\r\n    if existing_open_shift is not null then\r\n      raise exception\r\n        '🚫 You already have an active shift (ID: %). Please end it before starting a new one.',\r\n        existing_open_shift;\r\n    end if;\r\n  end if;\r\n\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "create_invoice_for_item",
          "definition": "CREATE OR REPLACE FUNCTION public.create_invoice_for_item()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\r\nBEGIN\r\n  INSERT INTO public.payroll_invoices (payroll_item_id, employee_id)\r\n  VALUES (NEW.id, NEW.employee_id);\r\n  RETURN NEW;\r\nEND;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_generate_v1mc",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_generate_v1mc()\n RETURNS uuid\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_generate_v1mc$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_generate_v3",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_generate_v3(namespace uuid, name text)\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_generate_v3$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_generate_v4",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_generate_v4()\n RETURNS uuid\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_generate_v4$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "uuid_generate_v5",
          "definition": "CREATE OR REPLACE FUNCTION extensions.uuid_generate_v5(namespace uuid, name text)\n RETURNS uuid\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/uuid-ossp', $function$uuid_generate_v5$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "digest",
          "definition": "CREATE OR REPLACE FUNCTION extensions.digest(text, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_digest$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "digest",
          "definition": "CREATE OR REPLACE FUNCTION extensions.digest(bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_digest$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "hmac",
          "definition": "CREATE OR REPLACE FUNCTION extensions.hmac(text, text, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_hmac$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "hmac",
          "definition": "CREATE OR REPLACE FUNCTION extensions.hmac(bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_hmac$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "crypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.crypt(text, text)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_crypt$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "encrypt_iv",
          "definition": "CREATE OR REPLACE FUNCTION extensions.encrypt_iv(bytea, bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_encrypt_iv$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "decrypt_iv",
          "definition": "CREATE OR REPLACE FUNCTION extensions.decrypt_iv(bytea, bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_decrypt_iv$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgrst_ddl_watch",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgrst_ddl_watch()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  cmd record;\nBEGIN\n  FOR cmd IN SELECT * FROM pg_event_trigger_ddl_commands()\n  LOOP\n    IF cmd.command_tag IN (\n      'CREATE SCHEMA', 'ALTER SCHEMA'\n    , 'CREATE TABLE', 'CREATE TABLE AS', 'SELECT INTO', 'ALTER TABLE'\n    , 'CREATE FOREIGN TABLE', 'ALTER FOREIGN TABLE'\n    , 'CREATE VIEW', 'ALTER VIEW'\n    , 'CREATE MATERIALIZED VIEW', 'ALTER MATERIALIZED VIEW'\n    , 'CREATE FUNCTION', 'ALTER FUNCTION'\n    , 'CREATE TRIGGER'\n    , 'CREATE TYPE', 'ALTER TYPE'\n    , 'CREATE RULE'\n    , 'COMMENT'\n    )\n    -- don't notify in case of CREATE TEMP table or other objects created on pg_temp\n    AND cmd.schema_name is distinct from 'pg_temp'\n    THEN\n      NOTIFY pgrst, 'reload schema';\n    END IF;\n  END LOOP;\nEND; $function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "grant_pg_graphql_access",
          "definition": "CREATE OR REPLACE FUNCTION extensions.grant_pg_graphql_access()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    func_is_graphql_resolve bool;\nBEGIN\n    func_is_graphql_resolve = (\n        SELECT n.proname = 'resolve'\n        FROM pg_event_trigger_ddl_commands() AS ev\n        LEFT JOIN pg_catalog.pg_proc AS n\n        ON ev.objid = n.oid\n    );\n\n    IF func_is_graphql_resolve\n    THEN\n        -- Update public wrapper to pass all arguments through to the pg_graphql resolve func\n        DROP FUNCTION IF EXISTS graphql_public.graphql;\n        create or replace function graphql_public.graphql(\n            \"operationName\" text default null,\n            query text default null,\n            variables jsonb default null,\n            extensions jsonb default null\n        )\n            returns jsonb\n            language sql\n        as $$\n            select graphql.resolve(\n                query := query,\n                variables := coalesce(variables, '{}'),\n                \"operationName\" := \"operationName\",\n                extensions := extensions\n            );\n        $$;\n\n        -- This hook executes when `graphql.resolve` is created. That is not necessarily the last\n        -- function in the extension so we need to grant permissions on existing entities AND\n        -- update default permissions to any others that are created after `graphql.resolve`\n        grant usage on schema graphql to postgres, anon, authenticated, service_role;\n        grant select on all tables in schema graphql to postgres, anon, authenticated, service_role;\n        grant execute on all functions in schema graphql to postgres, anon, authenticated, service_role;\n        grant all on all sequences in schema graphql to postgres, anon, authenticated, service_role;\n        alter default privileges in schema graphql grant all on tables to postgres, anon, authenticated, service_role;\n        alter default privileges in schema graphql grant all on functions to postgres, anon, authenticated, service_role;\n        alter default privileges in schema graphql grant all on sequences to postgres, anon, authenticated, service_role;\n\n        -- Allow postgres role to allow granting usage on graphql and graphql_public schemas to custom roles\n        grant usage on schema graphql_public to postgres with grant option;\n        grant usage on schema graphql to postgres with grant option;\n    END IF;\n\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "vault",
          "function_name": "_crypto_aead_det_encrypt",
          "definition": "CREATE OR REPLACE FUNCTION vault._crypto_aead_det_encrypt(message bytea, additional bytea, key_id bigint, context bytea DEFAULT '\\x7067736f6469756d'::bytea, nonce bytea DEFAULT NULL::bytea)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE\nAS '$libdir/supabase_vault', $function$pgsodium_crypto_aead_det_encrypt_by_id$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "update_shift_duration",
          "definition": "CREATE OR REPLACE FUNCTION public.update_shift_duration()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\r\nbegin\r\n  if new.shift_end is not null then\r\n    new.duration := new.shift_end - new.shift_start;\r\n  end if;\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "vault",
          "function_name": "_crypto_aead_det_noncegen",
          "definition": "CREATE OR REPLACE FUNCTION vault._crypto_aead_det_noncegen()\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE\nAS '$libdir/supabase_vault', $function$pgsodium_crypto_aead_det_noncegen$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "get_schema_version",
          "definition": "CREATE OR REPLACE FUNCTION graphql.get_schema_version()\n RETURNS integer\n LANGUAGE sql\n SECURITY DEFINER\nAS $function$\n    select last_value from graphql.seq_schema_version;\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "vault",
          "function_name": "create_secret",
          "definition": "CREATE OR REPLACE FUNCTION vault.create_secret(new_secret text, new_name text DEFAULT NULL::text, new_description text DEFAULT ''::text, new_key_id uuid DEFAULT NULL::uuid)\n RETURNS uuid\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO ''\nAS $function$\nDECLARE\n  rec record;\nBEGIN\n  INSERT INTO vault.secrets (secret, name, description)\n  VALUES (\n    new_secret,\n    new_name,\n    new_description\n  )\n  RETURNING * INTO rec;\n  UPDATE vault.secrets s\n  SET secret = encode(vault._crypto_aead_det_encrypt(\n    message := convert_to(rec.secret, 'utf8'),\n    additional := convert_to(s.id::text, 'utf8'),\n    key_id := 0,\n    context := 'pgsodium'::bytea,\n    nonce := rec.nonce\n  ), 'base64')\n  WHERE id = rec.id;\n  RETURN rec.id;\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "vault",
          "function_name": "update_secret",
          "definition": "CREATE OR REPLACE FUNCTION vault.update_secret(secret_id uuid, new_secret text DEFAULT NULL::text, new_name text DEFAULT NULL::text, new_description text DEFAULT NULL::text, new_key_id uuid DEFAULT NULL::uuid)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO ''\nAS $function$\nDECLARE\n  decrypted_secret text := (SELECT decrypted_secret FROM vault.decrypted_secrets WHERE id = secret_id);\nBEGIN\n  UPDATE vault.secrets s\n  SET\n    secret = CASE WHEN new_secret IS NULL THEN s.secret\n                  ELSE encode(vault._crypto_aead_det_encrypt(\n                    message := convert_to(new_secret, 'utf8'),\n                    additional := convert_to(s.id::text, 'utf8'),\n                    key_id := 0,\n                    context := 'pgsodium'::bytea,\n                    nonce := s.nonce\n                  ), 'base64') END,\n    name = coalesce(new_name, s.name),\n    description = coalesce(new_description, s.description),\n    updated_at = now()\n  WHERE s.id = secret_id;\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "exception",
          "definition": "CREATE OR REPLACE FUNCTION graphql.exception(message text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nbegin\n    raise exception using errcode='22000', message=message;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "_internal_resolve",
          "definition": "CREATE OR REPLACE FUNCTION graphql._internal_resolve(query text, variables jsonb DEFAULT '{}'::jsonb, \"operationName\" text DEFAULT NULL::text, extensions jsonb DEFAULT NULL::jsonb)\n RETURNS jsonb\n LANGUAGE c\nAS '$libdir/pg_graphql', $function$resolve_wrapper$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "resolve",
          "definition": "CREATE OR REPLACE FUNCTION graphql.resolve(query text, variables jsonb DEFAULT '{}'::jsonb, \"operationName\" text DEFAULT NULL::text, extensions jsonb DEFAULT NULL::jsonb)\n RETURNS jsonb\n LANGUAGE plpgsql\nAS $function$\ndeclare\n    res jsonb;\n    message_text text;\nbegin\n  begin\n    select graphql._internal_resolve(\"query\" := \"query\",\n                                     \"variables\" := \"variables\",\n                                     \"operationName\" := \"operationName\",\n                                     \"extensions\" := \"extensions\") into res;\n    return res;\n  exception\n    when others then\n    get stacked diagnostics message_text = message_text;\n    return\n    jsonb_build_object('data', null,\n                       'errors', jsonb_build_array(jsonb_build_object('message', message_text)));\n  end;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "log_training_completion",
          "definition": "CREATE OR REPLACE FUNCTION public.log_training_completion()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  emp_name text;\r\n  train_title text;\r\nbegin\r\n  select full_name into emp_name from public.profiles where id = new.employee_id;\r\n  select title into train_title from public.trainings where id = new.training_id;\r\n\r\n  insert into public.training_completion_log (employee_id, training_id, message)\r\n  values (\r\n    new.employee_id,\r\n    new.training_id,\r\n    format('✅ %s completed \"%s\" training on %s', emp_name, train_title, to_char(new.completed_at, 'YYYY-MM-DD HH24:MI'))\r\n  );\r\n\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "log_admin_shift_change",
          "definition": "CREATE OR REPLACE FUNCTION public.log_admin_shift_change()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  _user_id uuid := auth.uid();\r\n  _is_admin boolean;\r\nbegin\r\n  select public.has_role(_user_id, 'admin') into _is_admin;\r\n\r\n  -- Only log admin actions\r\n  if _is_admin then\r\n    if tg_op = 'INSERT' then\r\n      insert into public.shift_edit_log (shift_id, edited_by, action, notes)\r\n      values (new.id, _user_id, 'insert', new.notes);\r\n\r\n    elsif tg_op = 'UPDATE' then\r\n      insert into public.shift_edit_log (shift_id, edited_by, action, notes)\r\n      values (new.id, _user_id, 'update', new.notes);\r\n\r\n    elsif tg_op = 'DELETE' then\r\n      insert into public.shift_edit_log (shift_id, edited_by, action, notes)\r\n      values (old.id, _user_id, 'delete', old.notes);\r\n    end if;\r\n  end if;\r\n\r\n  if tg_op = 'DELETE' then\r\n    return old;\r\n  else\r\n    return new;\r\n  end if;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "vault",
          "function_name": "_crypto_aead_det_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION vault._crypto_aead_det_decrypt(message bytea, additional bytea, key_id bigint, context bytea DEFAULT '\\x7067736f6469756d'::bytea, nonce bytea DEFAULT NULL::bytea)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE\nAS '$libdir/supabase_vault', $function$pgsodium_crypto_aead_det_decrypt_by_id$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "gen_random_bytes",
          "definition": "CREATE OR REPLACE FUNCTION extensions.gen_random_bytes(integer)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_random_bytes$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "gen_random_uuid",
          "definition": "CREATE OR REPLACE FUNCTION extensions.gen_random_uuid()\n RETURNS uuid\n LANGUAGE c\n PARALLEL SAFE\nAS '$libdir/pgcrypto', $function$pg_random_uuid$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_encrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_encrypt(text, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_encrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_encrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_encrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_encrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_encrypt(text, text, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_encrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_encrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_encrypt_bytea(bytea, text, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_encrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_decrypt(bytea, text)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_decrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_decrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_decrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_decrypt(bytea, text, text)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_decrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_sym_decrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_sym_decrypt_bytea(bytea, text, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_sym_decrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_encrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_encrypt(text, bytea)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_encrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_encrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_encrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_encrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_encrypt(text, bytea, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_encrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_encrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_encrypt_bytea(bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_encrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt(bytea, bytea)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt(bytea, bytea, text, text)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_text$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_pub_decrypt_bytea",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_pub_decrypt_bytea(bytea, bytea, text, text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_pub_decrypt_bytea$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_key_id",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_key_id(bytea)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_key_id_w$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "armor",
          "definition": "CREATE OR REPLACE FUNCTION extensions.armor(bytea)\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_armor$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "armor",
          "definition": "CREATE OR REPLACE FUNCTION extensions.armor(bytea, text[], text[])\n RETURNS text\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_armor$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "dearmor",
          "definition": "CREATE OR REPLACE FUNCTION extensions.dearmor(text)\n RETURNS bytea\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pg_dearmor$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgp_armor_headers",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgp_armor_headers(text, OUT key text, OUT value text)\n RETURNS SETOF record\n LANGUAGE c\n IMMUTABLE PARALLEL SAFE STRICT\nAS '$libdir/pgcrypto', $function$pgp_armor_headers$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pg_stat_statements",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pg_stat_statements(showtext boolean, OUT userid oid, OUT dbid oid, OUT toplevel boolean, OUT queryid bigint, OUT query text, OUT plans bigint, OUT total_plan_time double precision, OUT min_plan_time double precision, OUT max_plan_time double precision, OUT mean_plan_time double precision, OUT stddev_plan_time double precision, OUT calls bigint, OUT total_exec_time double precision, OUT min_exec_time double precision, OUT max_exec_time double precision, OUT mean_exec_time double precision, OUT stddev_exec_time double precision, OUT rows bigint, OUT shared_blks_hit bigint, OUT shared_blks_read bigint, OUT shared_blks_dirtied bigint, OUT shared_blks_written bigint, OUT local_blks_hit bigint, OUT local_blks_read bigint, OUT local_blks_dirtied bigint, OUT local_blks_written bigint, OUT temp_blks_read bigint, OUT temp_blks_written bigint, OUT shared_blk_read_time double precision, OUT shared_blk_write_time double precision, OUT local_blk_read_time double precision, OUT local_blk_write_time double precision, OUT temp_blk_read_time double precision, OUT temp_blk_write_time double precision, OUT wal_records bigint, OUT wal_fpi bigint, OUT wal_bytes numeric, OUT jit_functions bigint, OUT jit_generation_time double precision, OUT jit_inlining_count bigint, OUT jit_inlining_time double precision, OUT jit_optimization_count bigint, OUT jit_optimization_time double precision, OUT jit_emission_count bigint, OUT jit_emission_time double precision, OUT jit_deform_count bigint, OUT jit_deform_time double precision, OUT stats_since timestamp with time zone, OUT minmax_stats_since timestamp with time zone)\n RETURNS SETOF record\n LANGUAGE c\n PARALLEL SAFE STRICT\nAS '$libdir/pg_stat_statements', $function$pg_stat_statements_1_11$function$\n",
          "language": "c",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "pgrst_drop_watch",
          "definition": "CREATE OR REPLACE FUNCTION extensions.pgrst_drop_watch()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  obj record;\nBEGIN\n  FOR obj IN SELECT * FROM pg_event_trigger_dropped_objects()\n  LOOP\n    IF obj.object_type IN (\n      'schema'\n    , 'table'\n    , 'foreign table'\n    , 'view'\n    , 'materialized view'\n    , 'function'\n    , 'trigger'\n    , 'type'\n    , 'rule'\n    )\n    AND obj.is_temporary IS false -- no pg_temp objects\n    THEN\n      NOTIFY pgrst, 'reload schema';\n    END IF;\n  END LOOP;\nEND; $function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "set_graphql_placeholder",
          "definition": "CREATE OR REPLACE FUNCTION extensions.set_graphql_placeholder()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\n    DECLARE\n    graphql_is_dropped bool;\n    BEGIN\n    graphql_is_dropped = (\n        SELECT ev.schema_name = 'graphql_public'\n        FROM pg_event_trigger_dropped_objects() AS ev\n        WHERE ev.schema_name = 'graphql_public'\n    );\n\n    IF graphql_is_dropped\n    THEN\n        create or replace function graphql_public.graphql(\n            \"operationName\" text default null,\n            query text default null,\n            variables jsonb default null,\n            extensions jsonb default null\n        )\n            returns jsonb\n            language plpgsql\n        as $$\n            DECLARE\n                server_version float;\n            BEGIN\n                server_version = (SELECT (SPLIT_PART((select version()), ' ', 2))::float);\n\n                IF server_version >= 14 THEN\n                    RETURN jsonb_build_object(\n                        'errors', jsonb_build_array(\n                            jsonb_build_object(\n                                'message', 'pg_graphql extension is not enabled.'\n                            )\n                        )\n                    );\n                ELSE\n                    RETURN jsonb_build_object(\n                        'errors', jsonb_build_array(\n                            jsonb_build_object(\n                                'message', 'pg_graphql is only available on projects running Postgres 14 onwards.'\n                            )\n                        )\n                    );\n                END IF;\n            END;\n        $$;\n    END IF;\n\n    END;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "grant_pg_net_access",
          "definition": "CREATE OR REPLACE FUNCTION extensions.grant_pg_net_access()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  IF EXISTS (\n    SELECT 1\n    FROM pg_event_trigger_ddl_commands() AS ev\n    JOIN pg_extension AS ext\n    ON ev.objid = ext.oid\n    WHERE ext.extname = 'pg_net'\n  )\n  THEN\n    IF NOT EXISTS (\n      SELECT 1\n      FROM pg_roles\n      WHERE rolname = 'supabase_functions_admin'\n    )\n    THEN\n      CREATE USER supabase_functions_admin NOINHERIT CREATEROLE LOGIN NOREPLICATION;\n    END IF;\n\n    GRANT USAGE ON SCHEMA net TO supabase_functions_admin, postgres, anon, authenticated, service_role;\n\n    IF EXISTS (\n      SELECT FROM pg_extension\n      WHERE extname = 'pg_net'\n      -- all versions in use on existing projects as of 2025-02-20\n      -- version 0.12.0 onwards don't need these applied\n      AND extversion IN ('0.2', '0.6', '0.7', '0.7.1', '0.8', '0.10.0', '0.11.0')\n    ) THEN\n      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;\n      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SECURITY DEFINER;\n\n      ALTER function net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;\n      ALTER function net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) SET search_path = net;\n\n      REVOKE ALL ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;\n      REVOKE ALL ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) FROM PUBLIC;\n\n      GRANT EXECUTE ON FUNCTION net.http_get(url text, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;\n      GRANT EXECUTE ON FUNCTION net.http_post(url text, body jsonb, params jsonb, headers jsonb, timeout_milliseconds integer) TO supabase_functions_admin, postgres, anon, authenticated, service_role;\n    END IF;\n  END IF;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "delete_prefix_hierarchy_trigger",
          "definition": "CREATE OR REPLACE FUNCTION storage.delete_prefix_hierarchy_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    prefix text;\nBEGIN\n    prefix := \"storage\".\"get_prefix\"(OLD.\"name\");\n\n    IF coalesce(prefix, '') != '' THEN\n        PERFORM \"storage\".\"delete_prefix\"(OLD.\"bucket_id\", prefix);\n    END IF;\n\n    RETURN OLD;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "set_user_role",
          "definition": "CREATE OR REPLACE FUNCTION public.set_user_role(target_email text, new_role text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\r\nbegin\r\n  update auth.users\r\n  set raw_user_meta_data = jsonb_set(\r\n    coalesce(raw_user_meta_data, '{}'::jsonb),\r\n    '{role}',\r\n    to_jsonb(new_role),\r\n    true\r\n  )\r\n  where email = target_email;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "quote_wal2json",
          "definition": "CREATE OR REPLACE FUNCTION realtime.quote_wal2json(entity regclass)\n RETURNS text\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\n      select\n        (\n          select string_agg('' || ch,'')\n          from unnest(string_to_array(nsp.nspname::text, null)) with ordinality x(ch, idx)\n          where\n            not (x.idx = 1 and x.ch = '\"')\n            and not (\n              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)\n              and x.ch = '\"'\n            )\n        )\n        || '.'\n        || (\n          select string_agg('' || ch,'')\n          from unnest(string_to_array(pc.relname::text, null)) with ordinality x(ch, idx)\n          where\n            not (x.idx = 1 and x.ch = '\"')\n            and not (\n              x.idx = array_length(string_to_array(nsp.nspname::text, null), 1)\n              and x.ch = '\"'\n            )\n          )\n      from\n        pg_class pc\n        join pg_namespace nsp\n          on pc.relnamespace = nsp.oid\n      where\n        pc.oid = entity\n    $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "graphql_public",
          "function_name": "graphql",
          "definition": "CREATE OR REPLACE FUNCTION graphql_public.graphql(\"operationName\" text DEFAULT NULL::text, query text DEFAULT NULL::text, variables jsonb DEFAULT NULL::jsonb, extensions jsonb DEFAULT NULL::jsonb)\n RETURNS jsonb\n LANGUAGE sql\nAS $function$\n            select graphql.resolve(\n                query := query,\n                variables := coalesce(variables, '{}'),\n                \"operationName\" := \"operationName\",\n                extensions := extensions\n            );\n        $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "comment_directive",
          "definition": "CREATE OR REPLACE FUNCTION graphql.comment_directive(comment_ text)\n RETURNS jsonb\n LANGUAGE sql\n IMMUTABLE\nAS $function$\n    /*\n    comment on column public.account.name is '@graphql.name: myField'\n    */\n    select\n        coalesce(\n            (\n                regexp_match(\n                    comment_,\n                    '@graphql\\((.+)\\)'\n                )\n            )[1]::jsonb,\n            jsonb_build_object()\n        )\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "graphql",
          "function_name": "increment_schema_version",
          "definition": "CREATE OR REPLACE FUNCTION graphql.increment_schema_version()\n RETURNS event_trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nbegin\n    perform pg_catalog.nextval('graphql.seq_schema_version');\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "extensions",
          "function_name": "grant_pg_cron_access",
          "definition": "CREATE OR REPLACE FUNCTION extensions.grant_pg_cron_access()\n RETURNS event_trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  IF EXISTS (\n    SELECT\n    FROM pg_event_trigger_ddl_commands() AS ev\n    JOIN pg_extension AS ext\n    ON ev.objid = ext.oid\n    WHERE ext.extname = 'pg_cron'\n  )\n  THEN\n    grant usage on schema cron to postgres with grant option;\n\n    alter default privileges in schema cron grant all on tables to postgres with grant option;\n    alter default privileges in schema cron grant all on functions to postgres with grant option;\n    alter default privileges in schema cron grant all on sequences to postgres with grant option;\n\n    alter default privileges for user supabase_admin in schema cron grant all\n        on sequences to postgres with grant option;\n    alter default privileges for user supabase_admin in schema cron grant all\n        on tables to postgres with grant option;\n    alter default privileges for user supabase_admin in schema cron grant all\n        on functions to postgres with grant option;\n\n    grant all privileges on all tables in schema cron to postgres with grant option;\n    revoke all on table cron.job from postgres;\n    grant select on table cron.job to postgres with grant option;\n  END IF;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "auth",
          "function_name": "jwt",
          "definition": "CREATE OR REPLACE FUNCTION auth.jwt()\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n    coalesce(\n        nullif(current_setting('request.jwt.claim', true), ''),\n        nullif(current_setting('request.jwt.claims', true), '')\n    )::jsonb\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "filename",
          "definition": "CREATE OR REPLACE FUNCTION storage.filename(name text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n_parts text[];\nBEGIN\n\tselect string_to_array(name, '/') into _parts;\n\treturn _parts[array_length(_parts,1)];\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "update_updated_at_column",
          "definition": "CREATE OR REPLACE FUNCTION storage.update_updated_at_column()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    NEW.updated_at = now();\n    RETURN NEW; \nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "can_insert_object",
          "definition": "CREATE OR REPLACE FUNCTION storage.can_insert_object(bucketid text, name text, owner uuid, metadata jsonb)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  INSERT INTO \"storage\".\"objects\" (\"bucket_id\", \"name\", \"owner\", \"metadata\") VALUES (bucketid, name, owner, metadata);\n  -- hack to rollback the successful insert\n  RAISE sqlstate 'PT200' using\n  message = 'ROLLBACK',\n  detail = 'rollback successful insert';\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_update_level_trigger",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_update_level_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    -- Ensure this is an update operation and the name has changed\n    IF TG_OP = 'UPDATE' AND (NEW.\"name\" <> OLD.\"name\" OR NEW.\"bucket_id\" <> OLD.\"bucket_id\") THEN\n        -- Set the new level\n        NEW.\"level\" := \"storage\".\"get_level\"(NEW.\"name\");\n    END IF;\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "foldername",
          "definition": "CREATE OR REPLACE FUNCTION storage.foldername(name text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\nDECLARE\n    _parts text[];\nBEGIN\n    -- Split on \"/\" to get path segments\n    SELECT string_to_array(name, '/') INTO _parts;\n    -- Return everything except the last segment\n    RETURN _parts[1 : array_length(_parts,1) - 1];\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "extension",
          "definition": "CREATE OR REPLACE FUNCTION storage.extension(name text)\n RETURNS text\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\nDECLARE\n    _parts text[];\n    _filename text;\nBEGIN\n    SELECT string_to_array(name, '/') INTO _parts;\n    SELECT _parts[array_length(_parts,1)] INTO _filename;\n    RETURN reverse(split_part(reverse(_filename), '.', 1));\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "prefixes_delete_cleanup",
          "definition": "CREATE OR REPLACE FUNCTION storage.prefixes_delete_cleanup()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_bucket_ids text[];\n    v_names      text[];\nBEGIN\n    IF current_setting('storage.gc.prefixes', true) = '1' THEN\n        RETURN NULL;\n    END IF;\n\n    PERFORM set_config('storage.gc.prefixes', '1', true);\n\n    SELECT COALESCE(array_agg(d.bucket_id), '{}'),\n           COALESCE(array_agg(d.name), '{}')\n    INTO v_bucket_ids, v_names\n    FROM deleted AS d\n    WHERE d.name <> '';\n\n    PERFORM storage.lock_top_prefixes(v_bucket_ids, v_names);\n    PERFORM storage.delete_leaf_prefixes(v_bucket_ids, v_names);\n\n    RETURN NULL;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "delete_leaf_prefixes",
          "definition": "CREATE OR REPLACE FUNCTION storage.delete_leaf_prefixes(bucket_ids text[], names text[])\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_rows_deleted integer;\nBEGIN\n    LOOP\n        WITH candidates AS (\n            SELECT DISTINCT\n                t.bucket_id,\n                unnest(storage.get_prefixes(t.name)) AS name\n            FROM unnest(bucket_ids, names) AS t(bucket_id, name)\n        ),\n        uniq AS (\n             SELECT\n                 bucket_id,\n                 name,\n                 storage.get_level(name) AS level\n             FROM candidates\n             WHERE name <> ''\n             GROUP BY bucket_id, name\n        ),\n        leaf AS (\n             SELECT\n                 p.bucket_id,\n                 p.name,\n                 p.level\n             FROM storage.prefixes AS p\n                  JOIN uniq AS u\n                       ON u.bucket_id = p.bucket_id\n                           AND u.name = p.name\n                           AND u.level = p.level\n             WHERE NOT EXISTS (\n                 SELECT 1\n                 FROM storage.objects AS o\n                 WHERE o.bucket_id = p.bucket_id\n                   AND o.level = p.level + 1\n                   AND o.name COLLATE \"C\" LIKE p.name || '/%'\n             )\n             AND NOT EXISTS (\n                 SELECT 1\n                 FROM storage.prefixes AS c\n                 WHERE c.bucket_id = p.bucket_id\n                   AND c.level = p.level + 1\n                   AND c.name COLLATE \"C\" LIKE p.name || '/%'\n             )\n        )\n        DELETE\n        FROM storage.prefixes AS p\n            USING leaf AS l\n        WHERE p.bucket_id = l.bucket_id\n          AND p.name = l.name\n          AND p.level = l.level;\n\n        GET DIAGNOSTICS v_rows_deleted = ROW_COUNT;\n        EXIT WHEN v_rows_deleted = 0;\n    END LOOP;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "list_objects_with_delimiter",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_objects_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, start_after text DEFAULT ''::text, next_token text DEFAULT ''::text)\n RETURNS TABLE(name text, id uuid, metadata jsonb, updated_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(name COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                        substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1)))\n                    ELSE\n                        name\n                END AS name, id, metadata, updated_at\n            FROM\n                storage.objects\n            WHERE\n                bucket_id = $5 AND\n                name ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $6 != '''' THEN\n                    name COLLATE \"C\" > $6\n                ELSE true END\n                AND CASE\n                    WHEN $4 != '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(name from length($1) + 1)) > 0 THEN\n                                substring(name from 1 for length($1) + position($2 IN substring(name from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                name COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END\n            ORDER BY\n                name COLLATE \"C\" ASC) as e order by name COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_token, bucket_id, start_after;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "list_multipart_uploads_with_delimiter",
          "definition": "CREATE OR REPLACE FUNCTION storage.list_multipart_uploads_with_delimiter(bucket_id text, prefix_param text, delimiter_param text, max_keys integer DEFAULT 100, next_key_token text DEFAULT ''::text, next_upload_token text DEFAULT ''::text)\n RETURNS TABLE(key text, id text, created_at timestamp with time zone)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    RETURN QUERY EXECUTE\n        'SELECT DISTINCT ON(key COLLATE \"C\") * from (\n            SELECT\n                CASE\n                    WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                        substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1)))\n                    ELSE\n                        key\n                END AS key, id, created_at\n            FROM\n                storage.s3_multipart_uploads\n            WHERE\n                bucket_id = $5 AND\n                key ILIKE $1 || ''%'' AND\n                CASE\n                    WHEN $4 != '''' AND $6 = '''' THEN\n                        CASE\n                            WHEN position($2 IN substring(key from length($1) + 1)) > 0 THEN\n                                substring(key from 1 for length($1) + position($2 IN substring(key from length($1) + 1))) COLLATE \"C\" > $4\n                            ELSE\n                                key COLLATE \"C\" > $4\n                            END\n                    ELSE\n                        true\n                END AND\n                CASE\n                    WHEN $6 != '''' THEN\n                        id COLLATE \"C\" > $6\n                    ELSE\n                        true\n                    END\n            ORDER BY\n                key COLLATE \"C\" ASC, created_at ASC) as e order by key COLLATE \"C\" LIMIT $3'\n        USING prefix_param, delimiter_param, max_keys, next_key_token, bucket_id, next_upload_token;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "operation",
          "definition": "CREATE OR REPLACE FUNCTION storage.operation()\n RETURNS text\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    RETURN current_setting('storage.operation', true);\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "get_level",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_level(name text)\n RETURNS integer\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\nSELECT array_length(string_to_array(\"name\", '/'), 1);\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "get_prefix",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_prefix(name text)\n RETURNS text\n LANGUAGE sql\n IMMUTABLE STRICT\nAS $function$\nSELECT\n    CASE WHEN strpos(\"name\", '/') > 0 THEN\n             regexp_replace(\"name\", '[\\/]{1}[^\\/]+\\/?$', '')\n         ELSE\n             ''\n        END;\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "get_prefixes",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_prefixes(name text)\n RETURNS text[]\n LANGUAGE plpgsql\n IMMUTABLE STRICT\nAS $function$\nDECLARE\n    parts text[];\n    prefixes text[];\n    prefix text;\nBEGIN\n    -- Split the name into parts by '/'\n    parts := string_to_array(\"name\", '/');\n    prefixes := '{}';\n\n    -- Construct the prefixes, stopping one level below the last part\n    FOR i IN 1..array_length(parts, 1) - 1 LOOP\n            prefix := array_to_string(parts[1:i], '/');\n            prefixes := array_append(prefixes, prefix);\n    END LOOP;\n\n    RETURN prefixes;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "add_prefixes",
          "definition": "CREATE OR REPLACE FUNCTION storage.add_prefixes(_bucket_id text, _name text)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    prefixes text[];\nBEGIN\n    prefixes := \"storage\".\"get_prefixes\"(\"_name\");\n\n    IF array_length(prefixes, 1) > 0 THEN\n        INSERT INTO storage.prefixes (name, bucket_id)\n        SELECT UNNEST(prefixes) as name, \"_bucket_id\" ON CONFLICT DO NOTHING;\n    END IF;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "delete_prefix",
          "definition": "CREATE OR REPLACE FUNCTION storage.delete_prefix(_bucket_id text, _name text)\n RETURNS boolean\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nBEGIN\n    -- Check if we can delete the prefix\n    IF EXISTS(\n        SELECT FROM \"storage\".\"prefixes\"\n        WHERE \"prefixes\".\"bucket_id\" = \"_bucket_id\"\n          AND level = \"storage\".\"get_level\"(\"_name\") + 1\n          AND \"prefixes\".\"name\" COLLATE \"C\" LIKE \"_name\" || '/%'\n        LIMIT 1\n    )\n    OR EXISTS(\n        SELECT FROM \"storage\".\"objects\"\n        WHERE \"objects\".\"bucket_id\" = \"_bucket_id\"\n          AND \"storage\".\"get_level\"(\"objects\".\"name\") = \"storage\".\"get_level\"(\"_name\") + 1\n          AND \"objects\".\"name\" COLLATE \"C\" LIKE \"_name\" || '/%'\n        LIMIT 1\n    ) THEN\n    -- There are sub-objects, skip deletion\n    RETURN false;\n    ELSE\n        DELETE FROM \"storage\".\"prefixes\"\n        WHERE \"prefixes\".\"bucket_id\" = \"_bucket_id\"\n          AND level = \"storage\".\"get_level\"(\"_name\")\n          AND \"prefixes\".\"name\" = \"_name\";\n        RETURN true;\n    END IF;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "prefixes_insert_trigger",
          "definition": "CREATE OR REPLACE FUNCTION storage.prefixes_insert_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_insert_prefix_trigger",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_insert_prefix_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    NEW.level := \"storage\".\"get_level\"(NEW.\"name\");\n\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "search_v1_optimised",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_v1_optimised(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\ndeclare\n    v_order_by text;\n    v_sort_order text;\nbegin\n    case\n        when sortcolumn = 'name' then\n            v_order_by = 'name';\n        when sortcolumn = 'updated_at' then\n            v_order_by = 'updated_at';\n        when sortcolumn = 'created_at' then\n            v_order_by = 'created_at';\n        when sortcolumn = 'last_accessed_at' then\n            v_order_by = 'last_accessed_at';\n        else\n            v_order_by = 'name';\n        end case;\n\n    case\n        when sortorder = 'asc' then\n            v_sort_order = 'asc';\n        when sortorder = 'desc' then\n            v_sort_order = 'desc';\n        else\n            v_sort_order = 'asc';\n        end case;\n\n    v_order_by = v_order_by || ' ' || v_sort_order;\n\n    return query execute\n        'with folders as (\n           select (string_to_array(name, ''/''))[level] as name\n           from storage.prefixes\n             where lower(prefixes.name) like lower($2 || $3) || ''%''\n               and bucket_id = $4\n               and level = $1\n           order by name ' || v_sort_order || '\n     )\n     (select name,\n            null as id,\n            null as updated_at,\n            null as created_at,\n            null as last_accessed_at,\n            null as metadata from folders)\n     union all\n     (select path_tokens[level] as \"name\",\n            id,\n            updated_at,\n            created_at,\n            last_accessed_at,\n            metadata\n     from storage.objects\n     where lower(objects.name) like lower($2 || $3) || ''%''\n       and bucket_id = $4\n       and level = $1\n     order by ' || v_order_by || ')\n     limit $5\n     offset $6' using levels, prefix, search, bucketname, limits, offsets;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "search_legacy_v1",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_legacy_v1(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\ndeclare\n    v_order_by text;\n    v_sort_order text;\nbegin\n    case\n        when sortcolumn = 'name' then\n            v_order_by = 'name';\n        when sortcolumn = 'updated_at' then\n            v_order_by = 'updated_at';\n        when sortcolumn = 'created_at' then\n            v_order_by = 'created_at';\n        when sortcolumn = 'last_accessed_at' then\n            v_order_by = 'last_accessed_at';\n        else\n            v_order_by = 'name';\n        end case;\n\n    case\n        when sortorder = 'asc' then\n            v_sort_order = 'asc';\n        when sortorder = 'desc' then\n            v_sort_order = 'desc';\n        else\n            v_sort_order = 'asc';\n        end case;\n\n    v_order_by = v_order_by || ' ' || v_sort_order;\n\n    return query execute\n        'with folders as (\n           select path_tokens[$1] as folder\n           from storage.objects\n             where objects.name ilike $2 || $3 || ''%''\n               and bucket_id = $4\n               and array_length(objects.path_tokens, 1) <> $1\n           group by folder\n           order by folder ' || v_sort_order || '\n     )\n     (select folder as \"name\",\n            null as id,\n            null as updated_at,\n            null as created_at,\n            null as last_accessed_at,\n            null as metadata from folders)\n     union all\n     (select path_tokens[$1] as \"name\",\n            id,\n            updated_at,\n            created_at,\n            last_accessed_at,\n            metadata\n     from storage.objects\n     where objects.name ilike $2 || $3 || ''%''\n       and bucket_id = $4\n       and array_length(objects.path_tokens, 1) = $1\n     order by ' || v_order_by || ')\n     limit $5\n     offset $6' using levels, prefix, search, bucketname, limits, offsets;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "search",
          "definition": "CREATE OR REPLACE FUNCTION storage.search(prefix text, bucketname text, limits integer DEFAULT 100, levels integer DEFAULT 1, offsets integer DEFAULT 0, search text DEFAULT ''::text, sortcolumn text DEFAULT 'name'::text, sortorder text DEFAULT 'asc'::text)\n RETURNS TABLE(name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\nAS $function$\ndeclare\n    can_bypass_rls BOOLEAN;\nbegin\n    SELECT rolbypassrls\n    INTO can_bypass_rls\n    FROM pg_roles\n    WHERE rolname = coalesce(nullif(current_setting('role', true), 'none'), current_user);\n\n    IF can_bypass_rls THEN\n        RETURN QUERY SELECT * FROM storage.search_v1_optimised(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);\n    ELSE\n        RETURN QUERY SELECT * FROM storage.search_legacy_v1(prefix, bucketname, limits, levels, offsets, search, sortcolumn, sortorder);\n    END IF;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "get_size_by_bucket",
          "definition": "CREATE OR REPLACE FUNCTION storage.get_size_by_bucket()\n RETURNS TABLE(size bigint, bucket_id text)\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n    return query\n        select sum((metadata->>'size')::bigint) as size, obj.bucket_id\n        from \"storage\".objects as obj\n        group by obj.bucket_id;\nEND\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "cast",
          "definition": "CREATE OR REPLACE FUNCTION realtime.\"cast\"(val text, type_ regtype)\n RETURNS jsonb\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\n    declare\n      res jsonb;\n    begin\n      execute format('select to_jsonb(%L::'|| type_::text || ')', val)  into res;\n      return res;\n    end\n    $function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_update_prefix_trigger",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_update_prefix_trigger()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    old_prefixes TEXT[];\nBEGIN\n    -- Ensure this is an update operation and the name has changed\n    IF TG_OP = 'UPDATE' AND (NEW.\"name\" <> OLD.\"name\" OR NEW.\"bucket_id\" <> OLD.\"bucket_id\") THEN\n        -- Retrieve old prefixes\n        old_prefixes := \"storage\".\"get_prefixes\"(OLD.\"name\");\n\n        -- Remove old prefixes that are only used by this object\n        WITH all_prefixes as (\n            SELECT unnest(old_prefixes) as prefix\n        ),\n        can_delete_prefixes as (\n             SELECT prefix\n             FROM all_prefixes\n             WHERE NOT EXISTS (\n                 SELECT 1 FROM \"storage\".\"objects\"\n                 WHERE \"bucket_id\" = OLD.\"bucket_id\"\n                   AND \"name\" <> OLD.\"name\"\n                   AND \"name\" LIKE (prefix || '%')\n             )\n         )\n        DELETE FROM \"storage\".\"prefixes\" WHERE name IN (SELECT prefix FROM can_delete_prefixes);\n\n        -- Add new prefixes\n        PERFORM \"storage\".\"add_prefixes\"(NEW.\"bucket_id\", NEW.\"name\");\n    END IF;\n    -- Set the new level\n    NEW.\"level\" := \"storage\".\"get_level\"(NEW.\"name\");\n\n    RETURN NEW;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "enforce_bucket_name_length",
          "definition": "CREATE OR REPLACE FUNCTION storage.enforce_bucket_name_length()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nbegin\n    if length(new.name) > 100 then\n        raise exception 'bucket name \"%\" is too long (% characters). Max is 100.', new.name, length(new.name);\n    end if;\n    return new;\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "search_v2",
          "definition": "CREATE OR REPLACE FUNCTION storage.search_v2(prefix text, bucket_name text, limits integer DEFAULT 100, levels integer DEFAULT 1, start_after text DEFAULT ''::text, sort_order text DEFAULT 'asc'::text, sort_column text DEFAULT 'name'::text, sort_column_after text DEFAULT ''::text)\n RETURNS TABLE(key text, name text, id uuid, updated_at timestamp with time zone, created_at timestamp with time zone, last_accessed_at timestamp with time zone, metadata jsonb)\n LANGUAGE plpgsql\n STABLE\nAS $function$\nDECLARE\n    sort_col text;\n    sort_ord text;\n    cursor_op text;\n    cursor_expr text;\n    sort_expr text;\nBEGIN\n    -- Validate sort_order\n    sort_ord := lower(sort_order);\n    IF sort_ord NOT IN ('asc', 'desc') THEN\n        sort_ord := 'asc';\n    END IF;\n\n    -- Determine cursor comparison operator\n    IF sort_ord = 'asc' THEN\n        cursor_op := '>';\n    ELSE\n        cursor_op := '<';\n    END IF;\n    \n    sort_col := lower(sort_column);\n    -- Validate sort column  \n    IF sort_col IN ('updated_at', 'created_at') THEN\n        cursor_expr := format(\n            '($5 = '''' OR ROW(date_trunc(''milliseconds'', %I), name COLLATE \"C\") %s ROW(COALESCE(NULLIF($6, '''')::timestamptz, ''epoch''::timestamptz), $5))',\n            sort_col, cursor_op\n        );\n        sort_expr := format(\n            'COALESCE(date_trunc(''milliseconds'', %I), ''epoch''::timestamptz) %s, name COLLATE \"C\" %s',\n            sort_col, sort_ord, sort_ord\n        );\n    ELSE\n        cursor_expr := format('($5 = '''' OR name COLLATE \"C\" %s $5)', cursor_op);\n        sort_expr := format('name COLLATE \"C\" %s', sort_ord);\n    END IF;\n\n    RETURN QUERY EXECUTE format(\n        $sql$\n        SELECT * FROM (\n            (\n                SELECT\n                    split_part(name, '/', $4) AS key,\n                    name,\n                    NULL::uuid AS id,\n                    updated_at,\n                    created_at,\n                    NULL::timestamptz AS last_accessed_at,\n                    NULL::jsonb AS metadata\n                FROM storage.prefixes\n                WHERE name COLLATE \"C\" LIKE $1 || '%%'\n                    AND bucket_id = $2\n                    AND level = $4\n                    AND %s\n                ORDER BY %s\n                LIMIT $3\n            )\n            UNION ALL\n            (\n                SELECT\n                    split_part(name, '/', $4) AS key,\n                    name,\n                    id,\n                    updated_at,\n                    created_at,\n                    last_accessed_at,\n                    metadata\n                FROM storage.objects\n                WHERE name COLLATE \"C\" LIKE $1 || '%%'\n                    AND bucket_id = $2\n                    AND level = $4\n                    AND %s\n                ORDER BY %s\n                LIMIT $3\n            )\n        ) obj\n        ORDER BY %s\n        LIMIT $3\n        $sql$,\n        cursor_expr,    -- prefixes WHERE\n        sort_expr,      -- prefixes ORDER BY\n        cursor_expr,    -- objects WHERE\n        sort_expr,      -- objects ORDER BY\n        sort_expr       -- final ORDER BY\n    )\n    USING prefix, bucket_name, limits, levels, start_after, sort_column_after;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "lock_top_prefixes",
          "definition": "CREATE OR REPLACE FUNCTION storage.lock_top_prefixes(bucket_ids text[], names text[])\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_bucket text;\n    v_top text;\nBEGIN\n    FOR v_bucket, v_top IN\n        SELECT DISTINCT t.bucket_id,\n            split_part(t.name, '/', 1) AS top\n        FROM unnest(bucket_ids, names) AS t(bucket_id, name)\n        WHERE t.name <> ''\n        ORDER BY 1, 2\n        LOOP\n            PERFORM pg_advisory_xact_lock(hashtextextended(v_bucket || '/' || v_top, 0));\n        END LOOP;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "prevent_multiple_open_shifts",
          "definition": "CREATE OR REPLACE FUNCTION public.prevent_multiple_open_shifts()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\r\nbegin\r\n  if exists (\r\n    select 1 from public.shift_logs\r\n    where employee_id = new.employee_id\r\n      and shift_end is null\r\n  ) then\r\n    raise exception 'Cannot time in: employee already has an open shift.';\r\n  end if;\r\n  return new;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_delete_cleanup",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_delete_cleanup()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_bucket_ids text[];\n    v_names      text[];\nBEGIN\n    IF current_setting('storage.gc.prefixes', true) = '1' THEN\n        RETURN NULL;\n    END IF;\n\n    PERFORM set_config('storage.gc.prefixes', '1', true);\n\n    SELECT COALESCE(array_agg(d.bucket_id), '{}'),\n           COALESCE(array_agg(d.name), '{}')\n    INTO v_bucket_ids, v_names\n    FROM deleted AS d\n    WHERE d.name <> '';\n\n    PERFORM storage.lock_top_prefixes(v_bucket_ids, v_names);\n    PERFORM storage.delete_leaf_prefixes(v_bucket_ids, v_names);\n\n    RETURN NULL;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "storage",
          "function_name": "objects_update_cleanup",
          "definition": "CREATE OR REPLACE FUNCTION storage.objects_update_cleanup()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    -- NEW - OLD (destinations to create prefixes for)\n    v_add_bucket_ids text[];\n    v_add_names      text[];\n\n    -- OLD - NEW (sources to prune)\n    v_src_bucket_ids text[];\n    v_src_names      text[];\nBEGIN\n    IF TG_OP <> 'UPDATE' THEN\n        RETURN NULL;\n    END IF;\n\n    -- 1) Compute NEW−OLD (added paths) and OLD−NEW (moved-away paths)\n    WITH added AS (\n        SELECT n.bucket_id, n.name\n        FROM new_rows n\n        WHERE n.name <> '' AND position('/' in n.name) > 0\n        EXCEPT\n        SELECT o.bucket_id, o.name FROM old_rows o WHERE o.name <> ''\n    ),\n    moved AS (\n         SELECT o.bucket_id, o.name\n         FROM old_rows o\n         WHERE o.name <> ''\n         EXCEPT\n         SELECT n.bucket_id, n.name FROM new_rows n WHERE n.name <> ''\n    )\n    SELECT\n        -- arrays for ADDED (dest) in stable order\n        COALESCE( (SELECT array_agg(a.bucket_id ORDER BY a.bucket_id, a.name) FROM added a), '{}' ),\n        COALESCE( (SELECT array_agg(a.name      ORDER BY a.bucket_id, a.name) FROM added a), '{}' ),\n        -- arrays for MOVED (src) in stable order\n        COALESCE( (SELECT array_agg(m.bucket_id ORDER BY m.bucket_id, m.name) FROM moved m), '{}' ),\n        COALESCE( (SELECT array_agg(m.name      ORDER BY m.bucket_id, m.name) FROM moved m), '{}' )\n    INTO v_add_bucket_ids, v_add_names, v_src_bucket_ids, v_src_names;\n\n    -- Nothing to do?\n    IF (array_length(v_add_bucket_ids, 1) IS NULL) AND (array_length(v_src_bucket_ids, 1) IS NULL) THEN\n        RETURN NULL;\n    END IF;\n\n    -- 2) Take per-(bucket, top) locks: ALL prefixes in consistent global order to prevent deadlocks\n    DECLARE\n        v_all_bucket_ids text[];\n        v_all_names text[];\n    BEGIN\n        -- Combine source and destination arrays for consistent lock ordering\n        v_all_bucket_ids := COALESCE(v_src_bucket_ids, '{}') || COALESCE(v_add_bucket_ids, '{}');\n        v_all_names := COALESCE(v_src_names, '{}') || COALESCE(v_add_names, '{}');\n\n        -- Single lock call ensures consistent global ordering across all transactions\n        IF array_length(v_all_bucket_ids, 1) IS NOT NULL THEN\n            PERFORM storage.lock_top_prefixes(v_all_bucket_ids, v_all_names);\n        END IF;\n    END;\n\n    -- 3) Create destination prefixes (NEW−OLD) BEFORE pruning sources\n    IF array_length(v_add_bucket_ids, 1) IS NOT NULL THEN\n        WITH candidates AS (\n            SELECT DISTINCT t.bucket_id, unnest(storage.get_prefixes(t.name)) AS name\n            FROM unnest(v_add_bucket_ids, v_add_names) AS t(bucket_id, name)\n            WHERE name <> ''\n        )\n        INSERT INTO storage.prefixes (bucket_id, name)\n        SELECT c.bucket_id, c.name\n        FROM candidates c\n        ON CONFLICT DO NOTHING;\n    END IF;\n\n    -- 4) Prune source prefixes bottom-up for OLD−NEW\n    IF array_length(v_src_bucket_ids, 1) IS NOT NULL THEN\n        -- re-entrancy guard so DELETE on prefixes won't recurse\n        IF current_setting('storage.gc.prefixes', true) <> '1' THEN\n            PERFORM set_config('storage.gc.prefixes', '1', true);\n        END IF;\n\n        PERFORM storage.delete_leaf_prefixes(v_src_bucket_ids, v_src_names);\n    END IF;\n\n    RETURN NULL;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "start_shift",
          "definition": "CREATE OR REPLACE FUNCTION public.start_shift(_employee_id uuid)\n RETURNS uuid\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  _shift_id uuid;\r\nbegin\r\n  insert into public.shift_logs (employee_id, shift_start)\r\n  values (_employee_id, now())\r\n  returning id into _shift_id;\r\n  return _shift_id;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "end_shift",
          "definition": "CREATE OR REPLACE FUNCTION public.end_shift(_shift_id uuid)\n RETURNS void\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\nbegin\r\n  update public.shift_logs\r\n  set shift_end = now(), updated_at = now()\r\n  where id = _shift_id;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "broadcast_changes",
          "definition": "CREATE OR REPLACE FUNCTION realtime.broadcast_changes(topic_name text, event_name text, operation text, table_name text, table_schema text, new record, old record, level text DEFAULT 'ROW'::text)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    -- Declare a variable to hold the JSONB representation of the row\n    row_data jsonb := '{}'::jsonb;\nBEGIN\n    IF level = 'STATEMENT' THEN\n        RAISE EXCEPTION 'function can only be triggered for each row, not for each statement';\n    END IF;\n    -- Check the operation type and handle accordingly\n    IF operation = 'INSERT' OR operation = 'UPDATE' OR operation = 'DELETE' THEN\n        row_data := jsonb_build_object('old_record', OLD, 'record', NEW, 'operation', operation, 'table', table_name, 'schema', table_schema);\n        PERFORM realtime.send (row_data, event_name, topic_name);\n    ELSE\n        RAISE EXCEPTION 'Unexpected operation type: %', operation;\n    END IF;\nEXCEPTION\n    WHEN OTHERS THEN\n        RAISE EXCEPTION 'Failed to process the row: %', SQLERRM;\nEND;\n\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "subscription_check_filters",
          "definition": "CREATE OR REPLACE FUNCTION realtime.subscription_check_filters()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n    /*\n    Validates that the user defined filters for a subscription:\n    - refer to valid columns that the claimed role may access\n    - values are coercable to the correct column type\n    */\n    declare\n        col_names text[] = coalesce(\n                array_agg(c.column_name order by c.ordinal_position),\n                '{}'::text[]\n            )\n            from\n                information_schema.columns c\n            where\n                format('%I.%I', c.table_schema, c.table_name)::regclass = new.entity\n                and pg_catalog.has_column_privilege(\n                    (new.claims ->> 'role'),\n                    format('%I.%I', c.table_schema, c.table_name)::regclass,\n                    c.column_name,\n                    'SELECT'\n                );\n        filter realtime.user_defined_filter;\n        col_type regtype;\n\n        in_val jsonb;\n    begin\n        for filter in select * from unnest(new.filters) loop\n            -- Filtered column is valid\n            if not filter.column_name = any(col_names) then\n                raise exception 'invalid column for filter %', filter.column_name;\n            end if;\n\n            -- Type is sanitized and safe for string interpolation\n            col_type = (\n                select atttypid::regtype\n                from pg_catalog.pg_attribute\n                where attrelid = new.entity\n                      and attname = filter.column_name\n            );\n            if col_type is null then\n                raise exception 'failed to lookup type for column %', filter.column_name;\n            end if;\n\n            -- Set maximum number of entries for in filter\n            if filter.op = 'in'::realtime.equality_op then\n                in_val = realtime.cast(filter.value, (col_type::text || '[]')::regtype);\n                if coalesce(jsonb_array_length(in_val), 0) > 100 then\n                    raise exception 'too many values for `in` filter. Maximum 100';\n                end if;\n            else\n                -- raises an exception if value is not coercable to type\n                perform realtime.cast(filter.value, col_type);\n            end if;\n\n        end loop;\n\n        -- Apply consistent order to filters so the unique constraint on\n        -- (subscription_id, entity, filters) can't be tricked by a different filter order\n        new.filters = coalesce(\n            array_agg(f order by f.column_name, f.op, f.value),\n            '{}'\n        ) from unnest(new.filters) f;\n\n        return new;\n    end;\n    $function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "send",
          "definition": "CREATE OR REPLACE FUNCTION realtime.send(payload jsonb, event text, topic text, private boolean DEFAULT true)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  BEGIN\n    -- Set the topic configuration\n    EXECUTE format('SET LOCAL realtime.topic TO %L', topic);\n\n    -- Attempt to insert the message\n    INSERT INTO realtime.messages (payload, event, topic, private, extension)\n    VALUES (payload, event, topic, private, 'broadcast');\n  EXCEPTION\n    WHEN OTHERS THEN\n      -- Capture and notify the error\n      RAISE WARNING 'ErrorSendingBroadcastMessage: %', SQLERRM;\n  END;\nEND;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "refresh_training_summary_secure",
          "definition": "CREATE OR REPLACE FUNCTION public.refresh_training_summary_secure()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\r\nBEGIN\r\n  -- Wipe and repopulate with latest data from the view\r\n  DELETE FROM public.training_summary_secure;\r\n  INSERT INTO public.training_summary_secure\r\n  SELECT * FROM public.training_summary;\r\n  RETURN NULL;\r\nEND;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "to_regrole",
          "definition": "CREATE OR REPLACE FUNCTION realtime.to_regrole(role_name text)\n RETURNS regrole\n LANGUAGE sql\n IMMUTABLE\nAS $function$ select role_name::regrole $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "admin_reset_quiz",
          "definition": "CREATE OR REPLACE FUNCTION public.admin_reset_quiz(p_employee uuid, p_training uuid)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\r\nBEGIN\r\n  IF p_employee IS NULL OR p_training IS NULL THEN\r\n    RAISE EXCEPTION 'Employee and Training must not be NULL';\r\n  END IF;\r\n\r\n  DELETE FROM public.training_tracker\r\n  WHERE employee_id = p_employee\r\n    AND training_id = p_training;\r\n\r\n  RAISE NOTICE '✅ Quiz reset for employee %, training %', p_employee, p_training;\r\nEND;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "apply_rls",
          "definition": "CREATE OR REPLACE FUNCTION realtime.apply_rls(wal jsonb, max_record_bytes integer DEFAULT (1024 * 1024))\n RETURNS SETOF realtime.wal_rls\n LANGUAGE plpgsql\nAS $function$\ndeclare\n-- Regclass of the table e.g. public.notes\nentity_ regclass = (quote_ident(wal ->> 'schema') || '.' || quote_ident(wal ->> 'table'))::regclass;\n\n-- I, U, D, T: insert, update ...\naction realtime.action = (\n    case wal ->> 'action'\n        when 'I' then 'INSERT'\n        when 'U' then 'UPDATE'\n        when 'D' then 'DELETE'\n        else 'ERROR'\n    end\n);\n\n-- Is row level security enabled for the table\nis_rls_enabled bool = relrowsecurity from pg_class where oid = entity_;\n\nsubscriptions realtime.subscription[] = array_agg(subs)\n    from\n        realtime.subscription subs\n    where\n        subs.entity = entity_;\n\n-- Subscription vars\nroles regrole[] = array_agg(distinct us.claims_role::text)\n    from\n        unnest(subscriptions) us;\n\nworking_role regrole;\nclaimed_role regrole;\nclaims jsonb;\n\nsubscription_id uuid;\nsubscription_has_access bool;\nvisible_to_subscription_ids uuid[] = '{}';\n\n-- structured info for wal's columns\ncolumns realtime.wal_column[];\n-- previous identity values for update/delete\nold_columns realtime.wal_column[];\n\nerror_record_exceeds_max_size boolean = octet_length(wal::text) > max_record_bytes;\n\n-- Primary jsonb output for record\noutput jsonb;\n\nbegin\nperform set_config('role', null, true);\n\ncolumns =\n    array_agg(\n        (\n            x->>'name',\n            x->>'type',\n            x->>'typeoid',\n            realtime.cast(\n                (x->'value') #>> '{}',\n                coalesce(\n                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4\n                    (x->>'type')::regtype\n                )\n            ),\n            (pks ->> 'name') is not null,\n            true\n        )::realtime.wal_column\n    )\n    from\n        jsonb_array_elements(wal -> 'columns') x\n        left join jsonb_array_elements(wal -> 'pk') pks\n            on (x ->> 'name') = (pks ->> 'name');\n\nold_columns =\n    array_agg(\n        (\n            x->>'name',\n            x->>'type',\n            x->>'typeoid',\n            realtime.cast(\n                (x->'value') #>> '{}',\n                coalesce(\n                    (x->>'typeoid')::regtype, -- null when wal2json version <= 2.4\n                    (x->>'type')::regtype\n                )\n            ),\n            (pks ->> 'name') is not null,\n            true\n        )::realtime.wal_column\n    )\n    from\n        jsonb_array_elements(wal -> 'identity') x\n        left join jsonb_array_elements(wal -> 'pk') pks\n            on (x ->> 'name') = (pks ->> 'name');\n\nfor working_role in select * from unnest(roles) loop\n\n    -- Update `is_selectable` for columns and old_columns\n    columns =\n        array_agg(\n            (\n                c.name,\n                c.type_name,\n                c.type_oid,\n                c.value,\n                c.is_pkey,\n                pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')\n            )::realtime.wal_column\n        )\n        from\n            unnest(columns) c;\n\n    old_columns =\n            array_agg(\n                (\n                    c.name,\n                    c.type_name,\n                    c.type_oid,\n                    c.value,\n                    c.is_pkey,\n                    pg_catalog.has_column_privilege(working_role, entity_, c.name, 'SELECT')\n                )::realtime.wal_column\n            )\n            from\n                unnest(old_columns) c;\n\n    if action <> 'DELETE' and count(1) = 0 from unnest(columns) c where c.is_pkey then\n        return next (\n            jsonb_build_object(\n                'schema', wal ->> 'schema',\n                'table', wal ->> 'table',\n                'type', action\n            ),\n            is_rls_enabled,\n            -- subscriptions is already filtered by entity\n            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),\n            array['Error 400: Bad Request, no primary key']\n        )::realtime.wal_rls;\n\n    -- The claims role does not have SELECT permission to the primary key of entity\n    elsif action <> 'DELETE' and sum(c.is_selectable::int) <> count(1) from unnest(columns) c where c.is_pkey then\n        return next (\n            jsonb_build_object(\n                'schema', wal ->> 'schema',\n                'table', wal ->> 'table',\n                'type', action\n            ),\n            is_rls_enabled,\n            (select array_agg(s.subscription_id) from unnest(subscriptions) as s where claims_role = working_role),\n            array['Error 401: Unauthorized']\n        )::realtime.wal_rls;\n\n    else\n        output = jsonb_build_object(\n            'schema', wal ->> 'schema',\n            'table', wal ->> 'table',\n            'type', action,\n            'commit_timestamp', to_char(\n                ((wal ->> 'timestamp')::timestamptz at time zone 'utc'),\n                'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'\n            ),\n            'columns', (\n                select\n                    jsonb_agg(\n                        jsonb_build_object(\n                            'name', pa.attname,\n                            'type', pt.typname\n                        )\n                        order by pa.attnum asc\n                    )\n                from\n                    pg_attribute pa\n                    join pg_type pt\n                        on pa.atttypid = pt.oid\n                where\n                    attrelid = entity_\n                    and attnum > 0\n                    and pg_catalog.has_column_privilege(working_role, entity_, pa.attname, 'SELECT')\n            )\n        )\n        -- Add \"record\" key for insert and update\n        || case\n            when action in ('INSERT', 'UPDATE') then\n                jsonb_build_object(\n                    'record',\n                    (\n                        select\n                            jsonb_object_agg(\n                                -- if unchanged toast, get column name and value from old record\n                                coalesce((c).name, (oc).name),\n                                case\n                                    when (c).name is null then (oc).value\n                                    else (c).value\n                                end\n                            )\n                        from\n                            unnest(columns) c\n                            full outer join unnest(old_columns) oc\n                                on (c).name = (oc).name\n                        where\n                            coalesce((c).is_selectable, (oc).is_selectable)\n                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))\n                    )\n                )\n            else '{}'::jsonb\n        end\n        -- Add \"old_record\" key for update and delete\n        || case\n            when action = 'UPDATE' then\n                jsonb_build_object(\n                        'old_record',\n                        (\n                            select jsonb_object_agg((c).name, (c).value)\n                            from unnest(old_columns) c\n                            where\n                                (c).is_selectable\n                                and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))\n                        )\n                    )\n            when action = 'DELETE' then\n                jsonb_build_object(\n                    'old_record',\n                    (\n                        select jsonb_object_agg((c).name, (c).value)\n                        from unnest(old_columns) c\n                        where\n                            (c).is_selectable\n                            and ( not error_record_exceeds_max_size or (octet_length((c).value::text) <= 64))\n                            and ( not is_rls_enabled or (c).is_pkey ) -- if RLS enabled, we can't secure deletes so filter to pkey\n                    )\n                )\n            else '{}'::jsonb\n        end;\n\n        -- Create the prepared statement\n        if is_rls_enabled and action <> 'DELETE' then\n            if (select 1 from pg_prepared_statements where name = 'walrus_rls_stmt' limit 1) > 0 then\n                deallocate walrus_rls_stmt;\n            end if;\n            execute realtime.build_prepared_statement_sql('walrus_rls_stmt', entity_, columns);\n        end if;\n\n        visible_to_subscription_ids = '{}';\n\n        for subscription_id, claims in (\n                select\n                    subs.subscription_id,\n                    subs.claims\n                from\n                    unnest(subscriptions) subs\n                where\n                    subs.entity = entity_\n                    and subs.claims_role = working_role\n                    and (\n                        realtime.is_visible_through_filters(columns, subs.filters)\n                        or (\n                          action = 'DELETE'\n                          and realtime.is_visible_through_filters(old_columns, subs.filters)\n                        )\n                    )\n        ) loop\n\n            if not is_rls_enabled or action = 'DELETE' then\n                visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;\n            else\n                -- Check if RLS allows the role to see the record\n                perform\n                    -- Trim leading and trailing quotes from working_role because set_config\n                    -- doesn't recognize the role as valid if they are included\n                    set_config('role', trim(both '\"' from working_role::text), true),\n                    set_config('request.jwt.claims', claims::text, true);\n\n                execute 'execute walrus_rls_stmt' into subscription_has_access;\n\n                if subscription_has_access then\n                    visible_to_subscription_ids = visible_to_subscription_ids || subscription_id;\n                end if;\n            end if;\n        end loop;\n\n        perform set_config('role', null, true);\n\n        return next (\n            output,\n            is_rls_enabled,\n            visible_to_subscription_ids,\n            case\n                when error_record_exceeds_max_size then array['Error 413: Payload Too Large']\n                else '{}'\n            end\n        )::realtime.wal_rls;\n\n    end if;\nend loop;\n\nperform set_config('role', null, true);\nend;\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "check_equality_op",
          "definition": "CREATE OR REPLACE FUNCTION realtime.check_equality_op(op realtime.equality_op, type_ regtype, val_1 text, val_2 text)\n RETURNS boolean\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\n      /*\n      Casts *val_1* and *val_2* as type *type_* and check the *op* condition for truthiness\n      */\n      declare\n          op_symbol text = (\n              case\n                  when op = 'eq' then '='\n                  when op = 'neq' then '!='\n                  when op = 'lt' then '<'\n                  when op = 'lte' then '<='\n                  when op = 'gt' then '>'\n                  when op = 'gte' then '>='\n                  when op = 'in' then '= any'\n                  else 'UNKNOWN OP'\n              end\n          );\n          res boolean;\n      begin\n          execute format(\n              'select %L::'|| type_::text || ' ' || op_symbol\n              || ' ( %L::'\n              || (\n                  case\n                      when op = 'in' then type_::text || '[]'\n                      else type_::text end\n              )\n              || ')', val_1, val_2) into res;\n          return res;\n      end;\n      $function$\n",
          "language": "plpgsql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "is_visible_through_filters",
          "definition": "CREATE OR REPLACE FUNCTION realtime.is_visible_through_filters(columns realtime.wal_column[], filters realtime.user_defined_filter[])\n RETURNS boolean\n LANGUAGE sql\n IMMUTABLE\nAS $function$\n    /*\n    Should the record be visible (true) or filtered out (false) after *filters* are applied\n    */\n        select\n            -- Default to allowed when no filters present\n            $2 is null -- no filters. this should not happen because subscriptions has a default\n            or array_length($2, 1) is null -- array length of an empty array is null\n            or bool_and(\n                coalesce(\n                    realtime.check_equality_op(\n                        op:=f.op,\n                        type_:=coalesce(\n                            col.type_oid::regtype, -- null when wal2json version <= 2.4\n                            col.type_name::regtype\n                        ),\n                        -- cast jsonb to text\n                        val_1:=col.value #>> '{}',\n                        val_2:=f.value\n                    ),\n                    false -- if null, filter does not match\n                )\n            )\n        from\n            unnest(filters) f\n            join unnest(columns) col\n                on f.column_name = col.name;\n    $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "list_changes",
          "definition": "CREATE OR REPLACE FUNCTION realtime.list_changes(publication name, slot_name name, max_changes integer, max_record_bytes integer)\n RETURNS SETOF realtime.wal_rls\n LANGUAGE sql\n SET log_min_messages TO 'fatal'\nAS $function$\n      with pub as (\n        select\n          concat_ws(\n            ',',\n            case when bool_or(pubinsert) then 'insert' else null end,\n            case when bool_or(pubupdate) then 'update' else null end,\n            case when bool_or(pubdelete) then 'delete' else null end\n          ) as w2j_actions,\n          coalesce(\n            string_agg(\n              realtime.quote_wal2json(format('%I.%I', schemaname, tablename)::regclass),\n              ','\n            ) filter (where ppt.tablename is not null and ppt.tablename not like '% %'),\n            ''\n          ) w2j_add_tables\n        from\n          pg_publication pp\n          left join pg_publication_tables ppt\n            on pp.pubname = ppt.pubname\n        where\n          pp.pubname = publication\n        group by\n          pp.pubname\n        limit 1\n      ),\n      w2j as (\n        select\n          x.*, pub.w2j_add_tables\n        from\n          pub,\n          pg_logical_slot_get_changes(\n            slot_name, null, max_changes,\n            'include-pk', 'true',\n            'include-transaction', 'false',\n            'include-timestamp', 'true',\n            'include-type-oids', 'true',\n            'format-version', '2',\n            'actions', pub.w2j_actions,\n            'add-tables', pub.w2j_add_tables\n          ) x\n      )\n      select\n        xyz.wal,\n        xyz.is_rls_enabled,\n        xyz.subscription_ids,\n        xyz.errors\n      from\n        w2j,\n        realtime.apply_rls(\n          wal := w2j.data::jsonb,\n          max_record_bytes := max_record_bytes\n        ) xyz(wal, is_rls_enabled, subscription_ids, errors)\n      where\n        w2j.w2j_add_tables <> ''\n        and xyz.subscription_ids[1] is not null\n    $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "build_prepared_statement_sql",
          "definition": "CREATE OR REPLACE FUNCTION realtime.build_prepared_statement_sql(prepared_statement_name text, entity regclass, columns realtime.wal_column[])\n RETURNS text\n LANGUAGE sql\nAS $function$\n      /*\n      Builds a sql string that, if executed, creates a prepared statement to\n      tests retrive a row from *entity* by its primary key columns.\n      Example\n          select realtime.build_prepared_statement_sql('public.notes', '{\"id\"}'::text[], '{\"bigint\"}'::text[])\n      */\n          select\n      'prepare ' || prepared_statement_name || ' as\n          select\n              exists(\n                  select\n                      1\n                  from\n                      ' || entity || '\n                  where\n                      ' || string_agg(quote_ident(pkc.name) || '=' || quote_nullable(pkc.value #>> '{}') , ' and ') || '\n              )'\n          from\n              unnest(columns) pkc\n          where\n              pkc.is_pkey\n          group by\n              entity\n      $function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "realtime",
          "function_name": "topic",
          "definition": "CREATE OR REPLACE FUNCTION realtime.topic()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\nselect nullif(current_setting('realtime.topic', true), '')::text;\n$function$\n",
          "language": "sql",
          "type": "f"
        },
        {
          "schema_name": "public",
          "function_name": "admin_add_or_update_shift",
          "definition": "CREATE OR REPLACE FUNCTION public.admin_add_or_update_shift(_employee_id uuid, _shift_start timestamp with time zone, _shift_end timestamp with time zone, _notes text DEFAULT NULL::text, _shift_id uuid DEFAULT NULL::uuid)\n RETURNS uuid\n LANGUAGE plpgsql\n SECURITY DEFINER\n SET search_path TO 'public'\nAS $function$\r\ndeclare\r\n  _id uuid;\r\nbegin\r\n  if _shift_id is null then\r\n    -- Insert a new shift manually\r\n    insert into public.shift_logs (employee_id, shift_start, shift_end, notes)\r\n    values (_employee_id, _shift_start, _shift_end, _notes)\r\n    returning id into _id;\r\n  else\r\n    -- Update existing shift\r\n    update public.shift_logs\r\n    set shift_start = _shift_start,\r\n        shift_end   = _shift_end,\r\n        notes       = _notes,\r\n        updated_at  = now()\r\n    where id = _shift_id\r\n    returning id into _id;\r\n  end if;\r\n\r\n  return _id;\r\nend;\r\n$function$\n",
          "language": "plpgsql",
          "type": "f"
        }
      ],
      "views": [
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements_info",
          "view_definition": " SELECT dealloc,\n    stats_reset\n   FROM pg_stat_statements_info() pg_stat_statements_info(dealloc, stats_reset);"
        },
        {
          "table_schema": "extensions",
          "table_name": "pg_stat_statements",
          "view_definition": " SELECT userid,\n    dbid,\n    toplevel,\n    queryid,\n    query,\n    plans,\n    total_plan_time,\n    min_plan_time,\n    max_plan_time,\n    mean_plan_time,\n    stddev_plan_time,\n    calls,\n    total_exec_time,\n    min_exec_time,\n    max_exec_time,\n    mean_exec_time,\n    stddev_exec_time,\n    rows,\n    shared_blks_hit,\n    shared_blks_read,\n    shared_blks_dirtied,\n    shared_blks_written,\n    local_blks_hit,\n    local_blks_read,\n    local_blks_dirtied,\n    local_blks_written,\n    temp_blks_read,\n    temp_blks_written,\n    shared_blk_read_time,\n    shared_blk_write_time,\n    local_blk_read_time,\n    local_blk_write_time,\n    temp_blk_read_time,\n    temp_blk_write_time,\n    wal_records,\n    wal_fpi,\n    wal_bytes,\n    jit_functions,\n    jit_generation_time,\n    jit_inlining_count,\n    jit_inlining_time,\n    jit_optimization_count,\n    jit_optimization_time,\n    jit_emission_count,\n    jit_emission_time,\n    jit_deform_count,\n    jit_deform_time,\n    stats_since,\n    minmax_stats_since\n   FROM pg_stat_statements(true) pg_stat_statements(userid, dbid, toplevel, queryid, query, plans, total_plan_time, min_plan_time, max_plan_time, mean_plan_time, stddev_plan_time, calls, total_exec_time, min_exec_time, max_exec_time, mean_exec_time, stddev_exec_time, rows, shared_blks_hit, shared_blks_read, shared_blks_dirtied, shared_blks_written, local_blks_hit, local_blks_read, local_blks_dirtied, local_blks_written, temp_blks_read, temp_blks_written, shared_blk_read_time, shared_blk_write_time, local_blk_read_time, local_blk_write_time, temp_blk_read_time, temp_blk_write_time, wal_records, wal_fpi, wal_bytes, jit_functions, jit_generation_time, jit_inlining_count, jit_inlining_time, jit_optimization_count, jit_optimization_time, jit_emission_count, jit_emission_time, jit_deform_count, jit_deform_time, stats_since, minmax_stats_since);"
        },
        {
          "table_schema": "vault",
          "table_name": "decrypted_secrets",
          "view_definition": null
        },
        {
          "table_schema": "public",
          "table_name": "training_summary",
          "view_definition": " SELECT p.id AS employee_id,\n    p.full_name AS employee_name,\n    tr.id AS training_id,\n    tr.title AS training_title,\n    t.completed_at,\n    t.quiz_score,\n    t.certificate_url,\n    tr.video_url,\n    tr.quiz_url\n   FROM ((training_tracker t\n     JOIN profiles p ON ((p.id = t.employee_id)))\n     JOIN trainings tr ON ((tr.id = t.training_id)));"
        },
        {
          "table_schema": "public",
          "table_name": "shift_summary",
          "view_definition": " SELECT p.full_name,\n    date_trunc('day'::text, s.shift_start) AS shift_day,\n    sum(s.duration) AS total_hours\n   FROM (shift_logs s\n     JOIN profiles p ON ((p.id = s.employee_id)))\n  GROUP BY p.full_name, (date_trunc('day'::text, s.shift_start));"
        },
        {
          "table_schema": "public",
          "table_name": "shift_logs_view",
          "view_definition": " SELECT sl.id,\n    sl.employee_id,\n    p.full_name,\n    sl.shift_start,\n    sl.shift_end,\n    sl.duration,\n    sl.notes,\n    sl.created_at\n   FROM (shift_logs sl\n     LEFT JOIN profiles p ON ((sl.employee_id = p.id)))\n  ORDER BY sl.created_at DESC;"
        },
        {
          "table_schema": "public",
          "table_name": "agreement_summary",
          "view_definition": " SELECT p.id AS employee_id,\n    p.full_name AS employee_name,\n    p.employee_type,\n    a.id AS agreement_id,\n    a.title AS agreement_title,\n    a.allowed_types,\n    a.doc_links,\n    t.signed_at,\n    COALESCE(t.status,\n        CASE\n            WHEN (t.signed_at IS NOT NULL) THEN 'signed'::text\n            ELSE 'pending'::text\n        END) AS status,\n    t.signature_base64\n   FROM ((profiles p\n     JOIN agreements a ON ((p.employee_type = ANY (a.allowed_types))))\n     LEFT JOIN agreement_tracker t ON (((p.id = t.employee_id) AND (a.id = t.agreement_id))));"
        },
        {
          "table_schema": "public",
          "table_name": "v_invoice_data",
          "view_definition": " SELECT inv.id AS invoice_id,\n    concat(COALESCE(upper(e.acronym), ''::text), 'P', to_char((p.date_ended)::timestamp with time zone, 'YYYY_MM_DD'::text)) AS invoice_no,\n    pi.id AS payroll_item_id,\n    p.id AS payroll_id,\n    e.id AS employee_id,\n    e.full_name,\n    e.nickname,\n    e.acronym,\n    e.\"position\",\n    e.email,\n    e.wise_tag,\n    e.wise_email,\n    e.bank_name,\n    e.account_number,\n    p.date_started,\n    p.date_ended,\n    p.release_date,\n    pi.hrs_worked,\n    pi.rate,\n    pi.subtotal,\n    pi.total,\n    pi.status AS payroll_status,\n    inv.confirmed,\n    inv.declined,\n    inv.submitted_at,\n    inv.verified_at,\n    inv.remarks,\n    inv.admin_verified,\n    inv.released\n   FROM (((payroll_items pi\n     JOIN payrolls p ON ((p.id = pi.payroll_id)))\n     JOIN profiles e ON ((e.id = pi.employee_id)))\n     LEFT JOIN payroll_invoices inv ON ((inv.payroll_item_id = pi.id)));"
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_cameras",
          "view_definition": " SELECT c.id,\n    c.camera_name,\n    c.battery_type,\n    c.battery_percentage,\n    c.status,\n    c.notes,\n    c.updated_at,\n    c.updated_by,\n    p.full_name AS updated_by_name,\n    c.created_at\n   FROM (cctv_cameras c\n     LEFT JOIN profiles p ON ((p.id = c.updated_by)));"
        },
        {
          "table_schema": "public",
          "table_name": "v_cctv_logs",
          "view_definition": " SELECT l.id,\n    l.camera_id,\n    c.camera_name,\n    c.status AS camera_status,\n    c.battery_type,\n    l.battery_percentage,\n    l.notes,\n    l.created_at,\n    l.updated_by,\n    p.full_name AS updated_by_name\n   FROM ((cctv_logs l\n     LEFT JOIN cctv_cameras c ON ((c.id = l.camera_id)))\n     LEFT JOIN profiles p ON ((p.id = l.updated_by)))\n  ORDER BY l.created_at DESC;"
        }
      ],
      "indexes": [
        {
          "schema_name": "auth",
          "table_name": "audit_log_entries",
          "index_name": "audit_logs_instance_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "instance_id"
        },
        {
          "schema_name": "auth",
          "table_name": "audit_log_entries",
          "index_name": "audit_log_entries_pkey",
          "index_type": "btree",
          "index_size": "40 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state",
          "index_name": "idx_auth_code",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "auth_code"
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state",
          "index_name": "idx_user_id_auth_method",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id, authentication_method"
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state",
          "index_name": "flow_state_created_at_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "created_at"
        },
        {
          "schema_name": "auth",
          "table_name": "flow_state",
          "index_name": "flow_state_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "identities",
          "index_name": "identities_user_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id"
        },
        {
          "schema_name": "auth",
          "table_name": "identities",
          "index_name": "identities_email_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "email"
        },
        {
          "schema_name": "auth",
          "table_name": "identities",
          "index_name": "identities_provider_id_provider_unique",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "provider_id, provider"
        },
        {
          "schema_name": "auth",
          "table_name": "identities",
          "index_name": "identities_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "instances",
          "index_name": "instances_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_amr_claims",
          "index_name": "mfa_amr_claims_session_id_authentication_method_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "session_id, authentication_method"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_amr_claims",
          "index_name": "amr_id_pk",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_challenges",
          "index_name": "mfa_challenge_created_at_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "created_at"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_challenges",
          "index_name": "mfa_challenges_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "factor_id_created_at_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id, created_at"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "mfa_factors_user_id_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "mfa_factors_user_friendly_name_unique",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "user_id, friendly_name"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "unique_phone_factor_per_user",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "user_id, phone"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "mfa_factors_last_challenged_at_key",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "last_challenged_at"
        },
        {
          "schema_name": "auth",
          "table_name": "mfa_factors",
          "index_name": "mfa_factors_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations",
          "index_name": "oauth_auth_pending_exp_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "expires_at"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations",
          "index_name": "oauth_authorizations_authorization_id_key",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "authorization_id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations",
          "index_name": "oauth_authorizations_authorization_code_key",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "authorization_code"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_authorizations",
          "index_name": "oauth_authorizations_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_clients",
          "index_name": "oauth_clients_deleted_at_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "deleted_at"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_clients",
          "index_name": "oauth_clients_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "index_name": "oauth_consents_active_user_client_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id, client_id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "index_name": "oauth_consents_user_order_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id, granted_at"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "index_name": "oauth_consents_active_client_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "client_id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "index_name": "oauth_consents_user_client_unique",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "user_id, client_id"
        },
        {
          "schema_name": "auth",
          "table_name": "oauth_consents",
          "index_name": "oauth_consents_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens",
          "index_name": "one_time_tokens_user_id_token_type_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "user_id, token_type"
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens",
          "index_name": "one_time_tokens_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens",
          "index_name": "one_time_tokens_token_hash_hash_idx",
          "index_type": "hash",
          "index_size": "32 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "token_hash"
        },
        {
          "schema_name": "auth",
          "table_name": "one_time_tokens",
          "index_name": "one_time_tokens_relates_to_hash_idx",
          "index_type": "hash",
          "index_size": "32 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "relates_to"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_instance_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "instance_id"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_instance_id_user_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "instance_id, user_id"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_parent_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "parent"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_session_id_revoked_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "revoked, session_id"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_updated_at_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "updated_at"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_token_unique",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "token"
        },
        {
          "schema_name": "auth",
          "table_name": "refresh_tokens",
          "index_name": "refresh_tokens_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers",
          "index_name": "saml_providers_sso_provider_id_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "sso_provider_id"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers",
          "index_name": "saml_providers_entity_id_key",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "entity_id"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_providers",
          "index_name": "saml_providers_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states",
          "index_name": "saml_relay_states_sso_provider_id_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "sso_provider_id"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states",
          "index_name": "saml_relay_states_for_email_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "for_email"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states",
          "index_name": "saml_relay_states_created_at_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "created_at"
        },
        {
          "schema_name": "auth",
          "table_name": "saml_relay_states",
          "index_name": "saml_relay_states_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "schema_migrations",
          "index_name": "schema_migrations_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "version"
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "index_name": "user_id_created_at_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id, created_at"
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "index_name": "sessions_user_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "user_id"
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "index_name": "sessions_not_after_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "not_after"
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "index_name": "sessions_oauth_client_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "oauth_client_id"
        },
        {
          "schema_name": "auth",
          "table_name": "sessions",
          "index_name": "sessions_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains",
          "index_name": "sso_domains_sso_provider_id_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "sso_provider_id"
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains",
          "index_name": "sso_domains_domain_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": ""
        },
        {
          "schema_name": "auth",
          "table_name": "sso_domains",
          "index_name": "sso_domains_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers",
          "index_name": "sso_providers_resource_id_pattern_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "resource_id"
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers",
          "index_name": "sso_providers_resource_id_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": ""
        },
        {
          "schema_name": "auth",
          "table_name": "sso_providers",
          "index_name": "sso_providers_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_instance_id_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "instance_id"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_instance_id_email_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "instance_id"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_is_anonymous_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "is_anonymous"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "confirmation_token_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "confirmation_token"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "recovery_token_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "recovery_token"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "email_change_token_current_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "email_change_token_current"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "email_change_token_new_idx",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "email_change_token_new"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "reauthentication_token_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "reauthentication_token"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_email_partial_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "email"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_phone_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "phone"
        },
        {
          "schema_name": "auth",
          "table_name": "users",
          "index_name": "users_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "index_name": "agreement_tracker_unique",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "employee_id, agreement_id"
        },
        {
          "schema_name": "public",
          "table_name": "agreement_tracker",
          "index_name": "agreement_tracker_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "agreements",
          "index_name": "agreements_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "announcements",
          "index_name": "announcements_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "applications",
          "index_name": "applications_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "cash_removal_logs",
          "index_name": "cash_removal_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_cameras",
          "index_name": "cctv_cameras_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "cctv_logs",
          "index_name": "cctv_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "clock_logs",
          "index_name": "clock_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "debug_log",
          "index_name": "debug_log_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "door_logs",
          "index_name": "door_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "employee_violations",
          "index_name": "employee_violations_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "incident_reports",
          "index_name": "incident_reports_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "payroll_invoices",
          "index_name": "payroll_invoices_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "payroll_items",
          "index_name": "payroll_items_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "payrolls",
          "index_name": "payrolls_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "paystubs",
          "index_name": "paystubs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "index_name": "profiles_email_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "email"
        },
        {
          "schema_name": "public",
          "table_name": "profiles",
          "index_name": "profiles_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "safe_room_logs",
          "index_name": "safe_room_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "schedules",
          "index_name": "schedules_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "shift_edit_log",
          "index_name": "shift_edit_log_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "index_name": "one_open_shift_per_employee",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "employee_id"
        },
        {
          "schema_name": "public",
          "table_name": "shift_logs",
          "index_name": "shift_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "sold_out_logs",
          "index_name": "sold_out_logs_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "time_off_requests",
          "index_name": "time_off_requests_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "training_completion_log",
          "index_name": "training_completion_log_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "index_name": "training_quizzes_training_id_version_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "training_id, version"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "index_name": "ux_training_quizzes_one_active",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "training_id"
        },
        {
          "schema_name": "public",
          "table_name": "training_quizzes",
          "index_name": "training_quizzes_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "index_name": "training_tracker_employee_id_training_id_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "employee_id, training_id"
        },
        {
          "schema_name": "public",
          "table_name": "training_tracker",
          "index_name": "training_tracker_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "trainings",
          "index_name": "trainings_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "user_roles",
          "index_name": "user_roles_user_id_role_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "user_id, role"
        },
        {
          "schema_name": "public",
          "table_name": "user_roles",
          "index_name": "user_roles_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "public",
          "table_name": "vacation_requests",
          "index_name": "vacation_requests_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "realtime",
          "table_name": "messages",
          "index_name": "messages_inserted_at_topic_index",
          "index_type": "btree",
          "index_size": "0 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "topic, inserted_at"
        },
        {
          "schema_name": "realtime",
          "table_name": "messages",
          "index_name": "messages_pkey",
          "index_type": "btree",
          "index_size": "0 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "inserted_at, id"
        },
        {
          "schema_name": "realtime",
          "table_name": "schema_migrations",
          "index_name": "schema_migrations_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "version"
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "index_name": "ix_realtime_subscription_entity",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "entity"
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "index_name": "subscription_subscription_id_entity_filters_key",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "subscription_id, entity, filters"
        },
        {
          "schema_name": "realtime",
          "table_name": "subscription",
          "index_name": "pk_subscription",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "buckets",
          "index_name": "bname",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "name"
        },
        {
          "schema_name": "storage",
          "table_name": "buckets",
          "index_name": "buckets_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "buckets_analytics",
          "index_name": "buckets_analytics_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "migrations",
          "index_name": "migrations_name_key",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "name"
        },
        {
          "schema_name": "storage",
          "table_name": "migrations",
          "index_name": "migrations_pkey",
          "index_type": "btree",
          "index_size": "16 kB",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "name_prefix_search",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "name"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "idx_objects_bucket_id_name",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "bucket_id, name"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "idx_objects_lower_name",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "bucket_id, level"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "bucketid_objname",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "bucket_id, name"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "idx_name_bucket_level_unique",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "bucket_id, name, level"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "objects_bucket_id_level_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "bucket_id, name, level"
        },
        {
          "schema_name": "storage",
          "table_name": "objects",
          "index_name": "objects_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes",
          "index_name": "idx_prefixes_lower_name",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "bucket_id, level"
        },
        {
          "schema_name": "storage",
          "table_name": "prefixes",
          "index_name": "prefixes_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "bucket_id, name, level"
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads",
          "index_name": "idx_multipart_uploads_list",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": false,
          "is_primary": false,
          "indexed_columns": "bucket_id, key, created_at"
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads",
          "index_name": "s3_multipart_uploads_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "storage",
          "table_name": "s3_multipart_uploads_parts",
          "index_name": "s3_multipart_uploads_parts_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        },
        {
          "schema_name": "vault",
          "table_name": "secrets",
          "index_name": "secrets_name_idx",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": false,
          "indexed_columns": "name"
        },
        {
          "schema_name": "vault",
          "table_name": "secrets",
          "index_name": "secrets_pkey",
          "index_type": "btree",
          "index_size": "8192 bytes",
          "is_unique": true,
          "is_primary": true,
          "indexed_columns": "id"
        }
      ],
      "auth_users": [
        {
          "id": "185dbeb0-27a4-4b76-8427-6aa176b671ff",
          "email": "captamerica@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "email_verified": true
          },
          "created_at": "2025-10-20T05:34:26.034471+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "a779bf2d-4c10-4037-a010-a11f50346272",
          "email": "sample@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "email_verified": true
          },
          "created_at": "2025-10-17T05:26:37.153435+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "20544b52-912c-4a2e-96ec-9f3828bbab12",
          "email": "test@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "email_verified": true
          },
          "created_at": "2025-10-17T05:29:58.604981+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "e485b45d-e550-44cd-b62e-0a749a60393f",
          "email": "chris.albea30@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "role": "employee",
            "email_verified": true
          },
          "created_at": "2025-10-16T01:45:30.996071+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "9c4fee45-9c08-46dd-ae65-d45d16b49c43",
          "email": "doctorstrange@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "doctor strange",
            "employee_type": "VA",
            "email_verified": true
          },
          "created_at": "2025-10-20T06:04:04.505421+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "28a7b0c2-ded7-4587-b26b-917aaed46e50",
          "email": "hippiesautomation@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "role": "admin",
            "email_verified": true
          },
          "created_at": "2025-10-16T01:28:11.459834+00:00",
          "last_sign_in_at": "2025-10-24T00:58:48.945916+00:00"
        },
        {
          "id": "abea4dab-7118-42fb-8114-c32f60098ea3",
          "email": "john@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "email_verified": true
          },
          "created_at": "2025-10-17T05:23:26.047462+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "6b524882-4010-46ef-853c-00b98f3a92d9",
          "email": "sam@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "sam",
            "employee_type": "VA",
            "email_verified": true
          },
          "created_at": "2025-10-21T14:46:25.956556+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "11cc860e-68a6-4edc-9f5e-ecd69d6f73e6",
          "email": "spiderman@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "peter",
            "employee_type": "Store",
            "email_verified": true
          },
          "created_at": "2025-10-20T05:29:41.956724+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "5ce3e5a7-3f76-405c-9faa-162a740192f2",
          "email": "test123@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "test123",
            "employee_type": "VA",
            "email_verified": true
          },
          "created_at": "2025-10-21T07:17:47.230231+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "e654786f-8a70-423b-8ce6-c96ac3bd2ccc",
          "email": "batman@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "Batman",
            "employee_type": "Store",
            "email_verified": true
          },
          "created_at": "2025-10-20T05:43:17.840787+00:00",
          "last_sign_in_at": "2025-10-21T06:36:14.264703+00:00"
        },
        {
          "id": "009cb3b5-46be-42f4-8a05-cd7261e8bec5",
          "email": "test123@yahoo.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "Bren Test",
            "employee_type": "VA",
            "email_verified": true
          },
          "created_at": "2025-10-23T08:04:58.786515+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "07eb2a83-93f5-4d87-b810-ea3bd2a20708",
          "email": "angelo@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "full_name": "Angelo",
            "employee_type": "VA",
            "email_verified": true
          },
          "created_at": "2025-10-21T07:05:20.423744+00:00",
          "last_sign_in_at": null
        },
        {
          "id": "ad2bf350-9f4e-4ed8-9ef6-a4517df03259",
          "email": "employee@gmail.com",
          "role": "authenticated",
          "raw_app_meta_data": {
            "provider": "email",
            "providers": [
              "email"
            ]
          },
          "raw_user_meta_data": {
            "role": "employee",
            "username": "employeess@gmail.com",
            "email_verified": true
          },
          "created_at": "2025-10-16T08:26:19.785006+00:00",
          "last_sign_in_at": "2025-10-23T07:45:55.046455+00:00"
        }
      ]
    }
  }
]